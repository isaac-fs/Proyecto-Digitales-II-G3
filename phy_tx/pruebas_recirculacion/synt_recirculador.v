/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "recirculador.v:1" *)
module synt_recirculador(idle, clk, data_in_0, data_in_1, data_in_2, data_in_3, valid_in_0, valid_in_1, valid_in_2, valid_in_3, data_out_0, data_out_1, data_out_2, data_out_3, data_out_4, data_out_5, data_out_6, data_out_7, valid_out_0, valid_out_1, valid_out_2, valid_out_3, valid_out_4, valid_out_5, valid_out_6, valid_out_7);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  (* src = "recirculador.v:3" *)
  input clk;
  (* src = "recirculador.v:37" *)
  wire [7:0] data_ff_0;
  (* src = "recirculador.v:37" *)
  wire [7:0] data_ff_1;
  (* src = "recirculador.v:37" *)
  wire [7:0] data_ff_2;
  (* src = "recirculador.v:37" *)
  wire [7:0] data_ff_3;
  (* src = "recirculador.v:5" *)
  input [7:0] data_in_0;
  (* src = "recirculador.v:6" *)
  input [7:0] data_in_1;
  (* src = "recirculador.v:7" *)
  input [7:0] data_in_2;
  (* src = "recirculador.v:8" *)
  input [7:0] data_in_3;
  (* src = "recirculador.v:15" *)
  output [7:0] data_out_0;
  (* src = "recirculador.v:16" *)
  output [7:0] data_out_1;
  (* src = "recirculador.v:17" *)
  output [7:0] data_out_2;
  (* src = "recirculador.v:18" *)
  output [7:0] data_out_3;
  (* src = "recirculador.v:20" *)
  output [7:0] data_out_4;
  (* src = "recirculador.v:21" *)
  output [7:0] data_out_5;
  (* src = "recirculador.v:22" *)
  output [7:0] data_out_6;
  (* src = "recirculador.v:23" *)
  output [7:0] data_out_7;
  (* src = "recirculador.v:2" *)
  input idle;
  (* src = "recirculador.v:39" *)
  wire valid_ff_0;
  (* src = "recirculador.v:39" *)
  wire valid_ff_1;
  (* src = "recirculador.v:39" *)
  wire valid_ff_2;
  (* src = "recirculador.v:39" *)
  wire valid_ff_3;
  (* src = "recirculador.v:10" *)
  input valid_in_0;
  (* src = "recirculador.v:11" *)
  input valid_in_1;
  (* src = "recirculador.v:12" *)
  input valid_in_2;
  (* src = "recirculador.v:13" *)
  input valid_in_3;
  (* src = "recirculador.v:25" *)
  output valid_out_0;
  (* src = "recirculador.v:26" *)
  output valid_out_1;
  (* src = "recirculador.v:27" *)
  output valid_out_2;
  (* src = "recirculador.v:28" *)
  output valid_out_3;
  (* src = "recirculador.v:29" *)
  output valid_out_4;
  (* src = "recirculador.v:30" *)
  output valid_out_5;
  (* src = "recirculador.v:31" *)
  output valid_out_6;
  (* src = "recirculador.v:32" *)
  output valid_out_7;
  NOT _064_ (
    .A(data_ff_0[6]),
    .Y(_062_)
  );
  NOT _065_ (
    .A(data_ff_0[5]),
    .Y(_063_)
  );
  NOT _066_ (
    .A(data_ff_0[4]),
    .Y(_000_)
  );
  NOT _067_ (
    .A(data_ff_0[3]),
    .Y(_001_)
  );
  NOT _068_ (
    .A(data_ff_0[2]),
    .Y(_002_)
  );
  NOT _069_ (
    .A(data_ff_0[1]),
    .Y(_003_)
  );
  NOT _070_ (
    .A(data_ff_0[0]),
    .Y(_004_)
  );
  NOT _071_ (
    .A(data_ff_1[6]),
    .Y(_005_)
  );
  NOT _072_ (
    .A(data_ff_1[5]),
    .Y(_006_)
  );
  NOT _073_ (
    .A(data_ff_1[4]),
    .Y(_007_)
  );
  NOT _074_ (
    .A(data_ff_1[3]),
    .Y(_008_)
  );
  NOT _075_ (
    .A(data_ff_1[2]),
    .Y(_009_)
  );
  NOT _076_ (
    .A(data_ff_1[1]),
    .Y(_010_)
  );
  NOT _077_ (
    .A(data_ff_1[0]),
    .Y(_011_)
  );
  NOT _078_ (
    .A(data_ff_3[6]),
    .Y(_012_)
  );
  NOT _079_ (
    .A(data_ff_3[5]),
    .Y(_013_)
  );
  NOT _080_ (
    .A(data_ff_3[4]),
    .Y(_014_)
  );
  NOT _081_ (
    .A(data_ff_3[3]),
    .Y(_015_)
  );
  NOT _082_ (
    .A(data_ff_3[2]),
    .Y(_016_)
  );
  NOT _083_ (
    .A(data_ff_3[1]),
    .Y(_017_)
  );
  NOT _084_ (
    .A(data_ff_3[0]),
    .Y(_018_)
  );
  NOT _085_ (
    .A(data_ff_2[6]),
    .Y(_019_)
  );
  NOT _086_ (
    .A(data_ff_2[5]),
    .Y(_020_)
  );
  NOT _087_ (
    .A(data_ff_2[4]),
    .Y(_021_)
  );
  NOT _088_ (
    .A(data_ff_2[3]),
    .Y(_022_)
  );
  NOT _089_ (
    .A(data_ff_2[2]),
    .Y(_023_)
  );
  NOT _090_ (
    .A(data_ff_2[1]),
    .Y(_024_)
  );
  NOT _091_ (
    .A(data_ff_2[0]),
    .Y(_025_)
  );
  NOT _092_ (
    .A(data_ff_3[7]),
    .Y(_026_)
  );
  NOT _093_ (
    .A(data_ff_2[7]),
    .Y(_027_)
  );
  NOT _094_ (
    .A(data_ff_1[7]),
    .Y(_028_)
  );
  NOT _095_ (
    .A(data_ff_0[7]),
    .Y(_029_)
  );
  NAND _096_ (
    .A(data_ff_0[6]),
    .B(idle),
    .Y(_030_)
  );
  NOT _097_ (
    .A(_030_),
    .Y(data_out_0[6])
  );
  NAND _098_ (
    .A(idle),
    .B(data_ff_0[5]),
    .Y(_031_)
  );
  NOT _099_ (
    .A(_031_),
    .Y(data_out_0[5])
  );
  NAND _100_ (
    .A(idle),
    .B(data_ff_0[4]),
    .Y(_032_)
  );
  NOT _101_ (
    .A(_032_),
    .Y(data_out_0[4])
  );
  NAND _102_ (
    .A(idle),
    .B(data_ff_0[3]),
    .Y(_033_)
  );
  NOT _103_ (
    .A(_033_),
    .Y(data_out_0[3])
  );
  NAND _104_ (
    .A(idle),
    .B(data_ff_0[2]),
    .Y(_034_)
  );
  NOT _105_ (
    .A(_034_),
    .Y(data_out_0[2])
  );
  NAND _106_ (
    .A(idle),
    .B(data_ff_0[1]),
    .Y(_035_)
  );
  NOT _107_ (
    .A(_035_),
    .Y(data_out_0[1])
  );
  NAND _108_ (
    .A(idle),
    .B(data_ff_0[0]),
    .Y(_036_)
  );
  NOT _109_ (
    .A(_036_),
    .Y(data_out_0[0])
  );
  NAND _110_ (
    .A(idle),
    .B(data_ff_1[6]),
    .Y(_037_)
  );
  NOT _111_ (
    .A(_037_),
    .Y(data_out_1[6])
  );
  NAND _112_ (
    .A(idle),
    .B(data_ff_1[5]),
    .Y(_038_)
  );
  NOT _113_ (
    .A(_038_),
    .Y(data_out_1[5])
  );
  NAND _114_ (
    .A(idle),
    .B(data_ff_1[4]),
    .Y(_039_)
  );
  NOT _115_ (
    .A(_039_),
    .Y(data_out_1[4])
  );
  NAND _116_ (
    .A(idle),
    .B(data_ff_1[3]),
    .Y(_040_)
  );
  NOT _117_ (
    .A(_040_),
    .Y(data_out_1[3])
  );
  NAND _118_ (
    .A(idle),
    .B(data_ff_1[2]),
    .Y(_041_)
  );
  NOT _119_ (
    .A(_041_),
    .Y(data_out_1[2])
  );
  NAND _120_ (
    .A(idle),
    .B(data_ff_1[1]),
    .Y(_042_)
  );
  NOT _121_ (
    .A(_042_),
    .Y(data_out_1[1])
  );
  NAND _122_ (
    .A(idle),
    .B(data_ff_1[0]),
    .Y(_043_)
  );
  NOT _123_ (
    .A(_043_),
    .Y(data_out_1[0])
  );
  NAND _124_ (
    .A(idle),
    .B(data_ff_3[6]),
    .Y(_044_)
  );
  NOT _125_ (
    .A(_044_),
    .Y(data_out_3[6])
  );
  NAND _126_ (
    .A(idle),
    .B(data_ff_3[5]),
    .Y(_045_)
  );
  NOT _127_ (
    .A(_045_),
    .Y(data_out_3[5])
  );
  NAND _128_ (
    .A(idle),
    .B(data_ff_3[4]),
    .Y(_046_)
  );
  NOT _129_ (
    .A(_046_),
    .Y(data_out_3[4])
  );
  NAND _130_ (
    .A(idle),
    .B(data_ff_3[3]),
    .Y(_047_)
  );
  NOT _131_ (
    .A(_047_),
    .Y(data_out_3[3])
  );
  NAND _132_ (
    .A(idle),
    .B(data_ff_3[2]),
    .Y(_048_)
  );
  NOT _133_ (
    .A(_048_),
    .Y(data_out_3[2])
  );
  NAND _134_ (
    .A(idle),
    .B(data_ff_3[1]),
    .Y(_049_)
  );
  NOT _135_ (
    .A(_049_),
    .Y(data_out_3[1])
  );
  NAND _136_ (
    .A(idle),
    .B(data_ff_3[0]),
    .Y(_050_)
  );
  NOT _137_ (
    .A(_050_),
    .Y(data_out_3[0])
  );
  NOR _138_ (
    .A(_062_),
    .B(idle),
    .Y(data_out_4[6])
  );
  NOR _139_ (
    .A(idle),
    .B(_063_),
    .Y(data_out_4[5])
  );
  NOR _140_ (
    .A(idle),
    .B(_000_),
    .Y(data_out_4[4])
  );
  NOR _141_ (
    .A(idle),
    .B(_001_),
    .Y(data_out_4[3])
  );
  NOR _142_ (
    .A(idle),
    .B(_002_),
    .Y(data_out_4[2])
  );
  NOR _143_ (
    .A(idle),
    .B(_003_),
    .Y(data_out_4[1])
  );
  NOR _144_ (
    .A(idle),
    .B(_004_),
    .Y(data_out_4[0])
  );
  NAND _145_ (
    .A(idle),
    .B(data_ff_2[6]),
    .Y(_051_)
  );
  NOT _146_ (
    .A(_051_),
    .Y(data_out_2[6])
  );
  NAND _147_ (
    .A(idle),
    .B(data_ff_2[5]),
    .Y(_052_)
  );
  NOT _148_ (
    .A(_052_),
    .Y(data_out_2[5])
  );
  NAND _149_ (
    .A(idle),
    .B(data_ff_2[4]),
    .Y(_053_)
  );
  NOT _150_ (
    .A(_053_),
    .Y(data_out_2[4])
  );
  NAND _151_ (
    .A(idle),
    .B(data_ff_2[3]),
    .Y(_054_)
  );
  NOT _152_ (
    .A(_054_),
    .Y(data_out_2[3])
  );
  NAND _153_ (
    .A(idle),
    .B(data_ff_2[2]),
    .Y(_055_)
  );
  NOT _154_ (
    .A(_055_),
    .Y(data_out_2[2])
  );
  NAND _155_ (
    .A(idle),
    .B(data_ff_2[1]),
    .Y(_056_)
  );
  NOT _156_ (
    .A(_056_),
    .Y(data_out_2[1])
  );
  NAND _157_ (
    .A(idle),
    .B(data_ff_2[0]),
    .Y(_057_)
  );
  NOT _158_ (
    .A(_057_),
    .Y(data_out_2[0])
  );
  NOR _159_ (
    .A(idle),
    .B(_005_),
    .Y(data_out_5[6])
  );
  NOR _160_ (
    .A(idle),
    .B(_006_),
    .Y(data_out_5[5])
  );
  NOR _161_ (
    .A(idle),
    .B(_007_),
    .Y(data_out_5[4])
  );
  NOR _162_ (
    .A(idle),
    .B(_008_),
    .Y(data_out_5[3])
  );
  NOR _163_ (
    .A(idle),
    .B(_009_),
    .Y(data_out_5[2])
  );
  NOR _164_ (
    .A(idle),
    .B(_010_),
    .Y(data_out_5[1])
  );
  NOR _165_ (
    .A(idle),
    .B(_011_),
    .Y(data_out_5[0])
  );
  NOR _166_ (
    .A(idle),
    .B(_019_),
    .Y(data_out_6[6])
  );
  NOR _167_ (
    .A(idle),
    .B(_020_),
    .Y(data_out_6[5])
  );
  NOR _168_ (
    .A(idle),
    .B(_021_),
    .Y(data_out_6[4])
  );
  NOR _169_ (
    .A(idle),
    .B(_022_),
    .Y(data_out_6[3])
  );
  NOR _170_ (
    .A(idle),
    .B(_023_),
    .Y(data_out_6[2])
  );
  NOR _171_ (
    .A(idle),
    .B(_024_),
    .Y(data_out_6[1])
  );
  NOR _172_ (
    .A(idle),
    .B(_025_),
    .Y(data_out_6[0])
  );
  NOR _173_ (
    .A(idle),
    .B(_012_),
    .Y(data_out_7[6])
  );
  NOR _174_ (
    .A(idle),
    .B(_013_),
    .Y(data_out_7[5])
  );
  NOR _175_ (
    .A(idle),
    .B(_014_),
    .Y(data_out_7[4])
  );
  NOR _176_ (
    .A(idle),
    .B(_015_),
    .Y(data_out_7[3])
  );
  NOR _177_ (
    .A(idle),
    .B(_016_),
    .Y(data_out_7[2])
  );
  NOR _178_ (
    .A(idle),
    .B(_017_),
    .Y(data_out_7[1])
  );
  NOR _179_ (
    .A(idle),
    .B(_018_),
    .Y(data_out_7[0])
  );
  NOR _180_ (
    .A(idle),
    .B(_026_),
    .Y(data_out_7[7])
  );
  NOR _181_ (
    .A(idle),
    .B(_027_),
    .Y(data_out_6[7])
  );
  NOR _182_ (
    .A(idle),
    .B(_028_),
    .Y(data_out_5[7])
  );
  NOR _183_ (
    .A(idle),
    .B(_029_),
    .Y(data_out_4[7])
  );
  NAND _184_ (
    .A(idle),
    .B(data_ff_3[7]),
    .Y(_058_)
  );
  NOT _185_ (
    .A(_058_),
    .Y(data_out_3[7])
  );
  NAND _186_ (
    .A(idle),
    .B(data_ff_2[7]),
    .Y(_059_)
  );
  NOT _187_ (
    .A(_059_),
    .Y(data_out_2[7])
  );
  NAND _188_ (
    .A(idle),
    .B(data_ff_1[7]),
    .Y(_060_)
  );
  NOT _189_ (
    .A(_060_),
    .Y(data_out_1[7])
  );
  NAND _190_ (
    .A(idle),
    .B(data_ff_0[7]),
    .Y(_061_)
  );
  NOT _191_ (
    .A(_061_),
    .Y(data_out_0[7])
  );
  (* src = "recirculador.v:44" *)
  DFF _192_ (
    .C(clk),
    .D(data_in_0[0]),
    .Q(data_ff_0[0])
  );
  (* src = "recirculador.v:44" *)
  DFF _193_ (
    .C(clk),
    .D(data_in_0[1]),
    .Q(data_ff_0[1])
  );
  (* src = "recirculador.v:44" *)
  DFF _194_ (
    .C(clk),
    .D(data_in_0[2]),
    .Q(data_ff_0[2])
  );
  (* src = "recirculador.v:44" *)
  DFF _195_ (
    .C(clk),
    .D(data_in_0[3]),
    .Q(data_ff_0[3])
  );
  (* src = "recirculador.v:44" *)
  DFF _196_ (
    .C(clk),
    .D(data_in_0[4]),
    .Q(data_ff_0[4])
  );
  (* src = "recirculador.v:44" *)
  DFF _197_ (
    .C(clk),
    .D(data_in_0[5]),
    .Q(data_ff_0[5])
  );
  (* src = "recirculador.v:44" *)
  DFF _198_ (
    .C(clk),
    .D(data_in_0[6]),
    .Q(data_ff_0[6])
  );
  (* src = "recirculador.v:44" *)
  DFF _199_ (
    .C(clk),
    .D(data_in_0[7]),
    .Q(data_ff_0[7])
  );
  (* src = "recirculador.v:44" *)
  DFF _200_ (
    .C(clk),
    .D(valid_in_3),
    .Q(valid_ff_3)
  );
  (* src = "recirculador.v:44" *)
  DFF _201_ (
    .C(clk),
    .D(data_in_1[0]),
    .Q(data_ff_1[0])
  );
  (* src = "recirculador.v:44" *)
  DFF _202_ (
    .C(clk),
    .D(data_in_1[1]),
    .Q(data_ff_1[1])
  );
  (* src = "recirculador.v:44" *)
  DFF _203_ (
    .C(clk),
    .D(data_in_1[2]),
    .Q(data_ff_1[2])
  );
  (* src = "recirculador.v:44" *)
  DFF _204_ (
    .C(clk),
    .D(data_in_1[3]),
    .Q(data_ff_1[3])
  );
  (* src = "recirculador.v:44" *)
  DFF _205_ (
    .C(clk),
    .D(data_in_1[4]),
    .Q(data_ff_1[4])
  );
  (* src = "recirculador.v:44" *)
  DFF _206_ (
    .C(clk),
    .D(data_in_1[5]),
    .Q(data_ff_1[5])
  );
  (* src = "recirculador.v:44" *)
  DFF _207_ (
    .C(clk),
    .D(data_in_1[6]),
    .Q(data_ff_1[6])
  );
  (* src = "recirculador.v:44" *)
  DFF _208_ (
    .C(clk),
    .D(data_in_1[7]),
    .Q(data_ff_1[7])
  );
  (* src = "recirculador.v:44" *)
  DFF _209_ (
    .C(clk),
    .D(data_in_2[0]),
    .Q(data_ff_2[0])
  );
  (* src = "recirculador.v:44" *)
  DFF _210_ (
    .C(clk),
    .D(data_in_2[1]),
    .Q(data_ff_2[1])
  );
  (* src = "recirculador.v:44" *)
  DFF _211_ (
    .C(clk),
    .D(data_in_2[2]),
    .Q(data_ff_2[2])
  );
  (* src = "recirculador.v:44" *)
  DFF _212_ (
    .C(clk),
    .D(data_in_2[3]),
    .Q(data_ff_2[3])
  );
  (* src = "recirculador.v:44" *)
  DFF _213_ (
    .C(clk),
    .D(data_in_2[4]),
    .Q(data_ff_2[4])
  );
  (* src = "recirculador.v:44" *)
  DFF _214_ (
    .C(clk),
    .D(data_in_2[5]),
    .Q(data_ff_2[5])
  );
  (* src = "recirculador.v:44" *)
  DFF _215_ (
    .C(clk),
    .D(data_in_2[6]),
    .Q(data_ff_2[6])
  );
  (* src = "recirculador.v:44" *)
  DFF _216_ (
    .C(clk),
    .D(data_in_2[7]),
    .Q(data_ff_2[7])
  );
  (* src = "recirculador.v:44" *)
  DFF _217_ (
    .C(clk),
    .D(data_in_3[0]),
    .Q(data_ff_3[0])
  );
  (* src = "recirculador.v:44" *)
  DFF _218_ (
    .C(clk),
    .D(data_in_3[1]),
    .Q(data_ff_3[1])
  );
  (* src = "recirculador.v:44" *)
  DFF _219_ (
    .C(clk),
    .D(data_in_3[2]),
    .Q(data_ff_3[2])
  );
  (* src = "recirculador.v:44" *)
  DFF _220_ (
    .C(clk),
    .D(data_in_3[3]),
    .Q(data_ff_3[3])
  );
  (* src = "recirculador.v:44" *)
  DFF _221_ (
    .C(clk),
    .D(data_in_3[4]),
    .Q(data_ff_3[4])
  );
  (* src = "recirculador.v:44" *)
  DFF _222_ (
    .C(clk),
    .D(data_in_3[5]),
    .Q(data_ff_3[5])
  );
  (* src = "recirculador.v:44" *)
  DFF _223_ (
    .C(clk),
    .D(data_in_3[6]),
    .Q(data_ff_3[6])
  );
  (* src = "recirculador.v:44" *)
  DFF _224_ (
    .C(clk),
    .D(data_in_3[7]),
    .Q(data_ff_3[7])
  );
  (* src = "recirculador.v:44" *)
  DFF _225_ (
    .C(clk),
    .D(valid_in_0),
    .Q(valid_ff_0)
  );
  (* src = "recirculador.v:44" *)
  DFF _226_ (
    .C(clk),
    .D(valid_in_1),
    .Q(valid_ff_1)
  );
  (* src = "recirculador.v:44" *)
  DFF _227_ (
    .C(clk),
    .D(valid_in_2),
    .Q(valid_ff_2)
  );
  assign valid_out_0 = valid_ff_0;
  assign valid_out_1 = valid_ff_1;
  assign valid_out_2 = valid_ff_2;
  assign valid_out_3 = valid_ff_3;
  assign valid_out_4 = 1'h0;
  assign valid_out_5 = 1'h0;
  assign valid_out_6 = 1'h0;
  assign valid_out_7 = 1'h0;
endmodule
