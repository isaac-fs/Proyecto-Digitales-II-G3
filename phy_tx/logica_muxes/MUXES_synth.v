/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* src = "MUX1_L1.v:1" *)
module MUX1_L1_synth(data_00, valid_00, reset_L, clk_f, clk_2f, data_0, data_1, valid_0, valid_1);
  (* src = "MUX1_L1.v:37" *)
  wire [7:0] _000_;
  (* src = "MUX1_L1.v:37" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  (* src = "MUX1_L1.v:6" *)
  input clk_2f;
  (* src = "MUX1_L1.v:5" *)
  input clk_f;
  (* src = "MUX1_L1.v:7" *)
  input [7:0] data_0;
  (* src = "MUX1_L1.v:2" *)
  output [7:0] data_00;
  (* src = "MUX1_L1.v:8" *)
  input [7:0] data_1;
  (* src = "MUX1_L1.v:4" *)
  input reset_L;
  (* src = "MUX1_L1.v:9" *)
  input valid_0;
  (* src = "MUX1_L1.v:3" *)
  output valid_00;
  (* src = "MUX1_L1.v:10" *)
  input valid_1;
  NOT _070_ (
    .A(reset_L),
    .Y(_015_)
  );
  NOT _071_ (
    .A(clk_f),
    .Y(_016_)
  );
  NOT _072_ (
    .A(valid_0),
    .Y(_017_)
  );
  NAND _073_ (
    .A(clk_f),
    .B(valid_0),
    .Y(_018_)
  );
  NAND _074_ (
    .A(_016_),
    .B(valid_1),
    .Y(_019_)
  );
  NAND _075_ (
    .A(_018_),
    .B(_019_),
    .Y(_020_)
  );
  NOR _076_ (
    .A(clk_f),
    .B(valid_1),
    .Y(_021_)
  );
  NAND _077_ (
    .A(clk_f),
    .B(_017_),
    .Y(_022_)
  );
  NAND _078_ (
    .A(reset_L),
    .B(_022_),
    .Y(_023_)
  );
  NOR _079_ (
    .A(_021_),
    .B(_023_),
    .Y(_024_)
  );
  NAND _080_ (
    .A(reset_L),
    .B(_020_),
    .Y(_025_)
  );
  NOR _081_ (
    .A(data_1[0]),
    .B(clk_f),
    .Y(_026_)
  );
  NOR _082_ (
    .A(data_0[0]),
    .B(_016_),
    .Y(_027_)
  );
  NOR _083_ (
    .A(_026_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _084_ (
    .A(_025_),
    .B(_028_),
    .Y(_029_)
  );
  NAND _085_ (
    .A(reset_L),
    .B(data_00[0]),
    .Y(_030_)
  );
  NOT _086_ (
    .A(_030_),
    .Y(_031_)
  );
  NOR _087_ (
    .A(_024_),
    .B(_031_),
    .Y(_032_)
  );
  NOR _088_ (
    .A(_029_),
    .B(_032_),
    .Y(_000_[0])
  );
  NOR _089_ (
    .A(clk_f),
    .B(data_1[1]),
    .Y(_033_)
  );
  NOR _090_ (
    .A(_016_),
    .B(data_0[1]),
    .Y(_034_)
  );
  NOR _091_ (
    .A(_033_),
    .B(_034_),
    .Y(_035_)
  );
  NOR _092_ (
    .A(_025_),
    .B(_035_),
    .Y(_036_)
  );
  NAND _093_ (
    .A(reset_L),
    .B(data_00[1]),
    .Y(_037_)
  );
  NOT _094_ (
    .A(_037_),
    .Y(_038_)
  );
  NOR _095_ (
    .A(_024_),
    .B(_038_),
    .Y(_039_)
  );
  NOR _096_ (
    .A(_036_),
    .B(_039_),
    .Y(_000_[1])
  );
  NOR _097_ (
    .A(clk_f),
    .B(data_1[2]),
    .Y(_040_)
  );
  NOR _098_ (
    .A(_016_),
    .B(data_0[2]),
    .Y(_041_)
  );
  NOR _099_ (
    .A(_040_),
    .B(_041_),
    .Y(_042_)
  );
  NOR _100_ (
    .A(_025_),
    .B(_042_),
    .Y(_043_)
  );
  NAND _101_ (
    .A(reset_L),
    .B(data_00[2]),
    .Y(_044_)
  );
  NOT _102_ (
    .A(_044_),
    .Y(_045_)
  );
  NOR _103_ (
    .A(_024_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _104_ (
    .A(_043_),
    .B(_046_),
    .Y(_000_[2])
  );
  NOR _105_ (
    .A(clk_f),
    .B(data_1[3]),
    .Y(_047_)
  );
  NOR _106_ (
    .A(_016_),
    .B(data_0[3]),
    .Y(_048_)
  );
  NOR _107_ (
    .A(_047_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _108_ (
    .A(_025_),
    .B(_049_),
    .Y(_050_)
  );
  NAND _109_ (
    .A(reset_L),
    .B(data_00[3]),
    .Y(_051_)
  );
  NOT _110_ (
    .A(_051_),
    .Y(_052_)
  );
  NOR _111_ (
    .A(_024_),
    .B(_052_),
    .Y(_053_)
  );
  NOR _112_ (
    .A(_050_),
    .B(_053_),
    .Y(_000_[3])
  );
  NOR _113_ (
    .A(clk_f),
    .B(data_1[4]),
    .Y(_054_)
  );
  NOR _114_ (
    .A(_016_),
    .B(data_0[4]),
    .Y(_055_)
  );
  NOR _115_ (
    .A(_054_),
    .B(_055_),
    .Y(_056_)
  );
  NOR _116_ (
    .A(_025_),
    .B(_056_),
    .Y(_057_)
  );
  NAND _117_ (
    .A(reset_L),
    .B(data_00[4]),
    .Y(_058_)
  );
  NOT _118_ (
    .A(_058_),
    .Y(_059_)
  );
  NOR _119_ (
    .A(_024_),
    .B(_059_),
    .Y(_060_)
  );
  NOR _120_ (
    .A(_057_),
    .B(_060_),
    .Y(_000_[4])
  );
  NOR _121_ (
    .A(clk_f),
    .B(data_1[5]),
    .Y(_061_)
  );
  NOR _122_ (
    .A(_016_),
    .B(data_0[5]),
    .Y(_062_)
  );
  NOR _123_ (
    .A(_061_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _124_ (
    .A(_025_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _125_ (
    .A(reset_L),
    .B(data_00[5]),
    .Y(_065_)
  );
  NOT _126_ (
    .A(_065_),
    .Y(_066_)
  );
  NOR _127_ (
    .A(_024_),
    .B(_066_),
    .Y(_067_)
  );
  NOR _128_ (
    .A(_064_),
    .B(_067_),
    .Y(_000_[5])
  );
  NOR _129_ (
    .A(clk_f),
    .B(data_1[6]),
    .Y(_068_)
  );
  NOR _130_ (
    .A(_016_),
    .B(data_0[6]),
    .Y(_069_)
  );
  NOR _131_ (
    .A(_068_),
    .B(_069_),
    .Y(_002_)
  );
  NOR _132_ (
    .A(_025_),
    .B(_002_),
    .Y(_003_)
  );
  NAND _133_ (
    .A(reset_L),
    .B(data_00[6]),
    .Y(_004_)
  );
  NOT _134_ (
    .A(_004_),
    .Y(_005_)
  );
  NOR _135_ (
    .A(_024_),
    .B(_005_),
    .Y(_006_)
  );
  NOR _136_ (
    .A(_003_),
    .B(_006_),
    .Y(_000_[6])
  );
  NOR _137_ (
    .A(clk_f),
    .B(data_1[7]),
    .Y(_007_)
  );
  NOR _138_ (
    .A(_016_),
    .B(data_0[7]),
    .Y(_008_)
  );
  NOR _139_ (
    .A(_007_),
    .B(_008_),
    .Y(_009_)
  );
  NOR _140_ (
    .A(_025_),
    .B(_009_),
    .Y(_010_)
  );
  NAND _141_ (
    .A(reset_L),
    .B(data_00[7]),
    .Y(_011_)
  );
  NOT _142_ (
    .A(_011_),
    .Y(_012_)
  );
  NOR _143_ (
    .A(_024_),
    .B(_012_),
    .Y(_013_)
  );
  NOR _144_ (
    .A(_010_),
    .B(_013_),
    .Y(_000_[7])
  );
  NAND _145_ (
    .A(valid_00),
    .B(_015_),
    .Y(_014_)
  );
  NAND _146_ (
    .A(_025_),
    .B(_014_),
    .Y(_001_)
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _147_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_00[0])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _148_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_00[1])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _149_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_00[2])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _150_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_00[3])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _151_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_00[4])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _152_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_00[5])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _153_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_00[6])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _154_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_00[7])
  );
  (* src = "MUX1_L1.v:37" *)
  DFF _155_ (
    .C(clk_2f),
    .D(_001_),
    .Q(valid_00)
  );
endmodule

(* top =  1  *)
(* src = "MUXES.v:4" *)
module MUXES_synth(data_000, valid_000, reset_L, clk_f, clk_2f, clk_4f, data_0, data_1, data_2, data_3, valid_0, valid_1, valid_2, valid_3);
  (* src = "MUXES.v:9" *)
  input clk_2f;
  (* src = "MUXES.v:10" *)
  input clk_4f;
  (* src = "MUXES.v:8" *)
  input clk_f;
  (* src = "MUXES.v:11" *)
  input [7:0] data_0;
  (* src = "MUXES.v:5" *)
  output [7:0] data_000;
  (* src = "MUXES.v:12" *)
  input [7:0] data_1;
  (* src = "MUXES.v:13" *)
  input [7:0] data_2;
  (* src = "MUXES.v:14" *)
  input [7:0] data_3;
  (* src = "MUXES.v:20" *)
  wire [7:0] data__00;
  (* src = "MUXES.v:20" *)
  wire [7:0] data__11;
  (* src = "MUXES.v:7" *)
  input reset_L;
  (* src = "MUXES.v:15" *)
  input valid_0;
  (* src = "MUXES.v:6" *)
  output valid_000;
  (* src = "MUXES.v:16" *)
  input valid_1;
  (* src = "MUXES.v:17" *)
  input valid_2;
  (* src = "MUXES.v:18" *)
  input valid_3;
  (* src = "MUXES.v:21" *)
  wire valid__00;
  (* src = "MUXES.v:21" *)
  wire valid__11;
  (* module_not_derived = 32'd1 *)
  (* src = "MUXES.v:24" *)
  MUX1_L1_synth MUX1 (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_0(data_0),
    .data_00(data__00),
    .data_1(data_1),
    .reset_L(reset_L),
    .valid_0(valid_0),
    .valid_00(valid__00),
    .valid_1(valid_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "MUXES.v:34" *)
  MUX1_L1_synth MUX2 (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_0(data_2),
    .data_00(data__11),
    .data_1(data_3),
    .reset_L(reset_L),
    .valid_0(valid_2),
    .valid_00(valid__11),
    .valid_1(valid_3)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "MUXES.v:44" *)
  MUX_L2_synth MUX3 (
    .clk_2f(clk_2f),
    .clk_4f(clk_4f),
    .data_00(data__00),
    .data_000(data_000),
    .data_11(data__11),
    .reset_L(reset_L),
    .valid_00(valid__00),
    .valid_000(valid_000),
    .valid_11(valid__11)
  );
endmodule

(* src = "MUX_L2.v:1" *)
module MUX_L2_synth(data_000, valid_000, reset_L, clk_2f, clk_4f, data_00, data_11, valid_00, valid_11);
  (* src = "MUX_L2.v:36" *)
  wire [7:0] _000_;
  (* src = "MUX_L2.v:36" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  (* src = "MUX_L2.v:5" *)
  input clk_2f;
  (* src = "MUX_L2.v:6" *)
  input clk_4f;
  (* src = "MUX_L2.v:7" *)
  input [7:0] data_00;
  (* src = "MUX_L2.v:2" *)
  output [7:0] data_000;
  (* src = "MUX_L2.v:8" *)
  input [7:0] data_11;
  (* src = "MUX_L2.v:4" *)
  input reset_L;
  (* src = "MUX_L2.v:9" *)
  input valid_00;
  (* src = "MUX_L2.v:3" *)
  output valid_000;
  (* src = "MUX_L2.v:10" *)
  input valid_11;
  NOT _070_ (
    .A(reset_L),
    .Y(_015_)
  );
  NOT _071_ (
    .A(clk_2f),
    .Y(_016_)
  );
  NOT _072_ (
    .A(valid_00),
    .Y(_017_)
  );
  NAND _073_ (
    .A(clk_2f),
    .B(valid_00),
    .Y(_018_)
  );
  NAND _074_ (
    .A(_016_),
    .B(valid_11),
    .Y(_019_)
  );
  NAND _075_ (
    .A(_018_),
    .B(_019_),
    .Y(_020_)
  );
  NOR _076_ (
    .A(clk_2f),
    .B(valid_11),
    .Y(_021_)
  );
  NAND _077_ (
    .A(clk_2f),
    .B(_017_),
    .Y(_022_)
  );
  NAND _078_ (
    .A(reset_L),
    .B(_022_),
    .Y(_023_)
  );
  NOR _079_ (
    .A(_021_),
    .B(_023_),
    .Y(_024_)
  );
  NAND _080_ (
    .A(reset_L),
    .B(_020_),
    .Y(_025_)
  );
  NOR _081_ (
    .A(clk_2f),
    .B(data_11[1]),
    .Y(_026_)
  );
  NOR _082_ (
    .A(_016_),
    .B(data_00[1]),
    .Y(_027_)
  );
  NOR _083_ (
    .A(_026_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _084_ (
    .A(_025_),
    .B(_028_),
    .Y(_029_)
  );
  NAND _085_ (
    .A(reset_L),
    .B(data_000[1]),
    .Y(_030_)
  );
  NOT _086_ (
    .A(_030_),
    .Y(_031_)
  );
  NOR _087_ (
    .A(_024_),
    .B(_031_),
    .Y(_032_)
  );
  NOR _088_ (
    .A(_029_),
    .B(_032_),
    .Y(_000_[1])
  );
  NOR _089_ (
    .A(clk_2f),
    .B(data_11[2]),
    .Y(_033_)
  );
  NOR _090_ (
    .A(_016_),
    .B(data_00[2]),
    .Y(_034_)
  );
  NOR _091_ (
    .A(_033_),
    .B(_034_),
    .Y(_035_)
  );
  NOR _092_ (
    .A(_025_),
    .B(_035_),
    .Y(_036_)
  );
  NAND _093_ (
    .A(reset_L),
    .B(data_000[2]),
    .Y(_037_)
  );
  NOT _094_ (
    .A(_037_),
    .Y(_038_)
  );
  NOR _095_ (
    .A(_024_),
    .B(_038_),
    .Y(_039_)
  );
  NOR _096_ (
    .A(_036_),
    .B(_039_),
    .Y(_000_[2])
  );
  NOR _097_ (
    .A(clk_2f),
    .B(data_11[3]),
    .Y(_040_)
  );
  NOR _098_ (
    .A(_016_),
    .B(data_00[3]),
    .Y(_041_)
  );
  NOR _099_ (
    .A(_040_),
    .B(_041_),
    .Y(_042_)
  );
  NOR _100_ (
    .A(_025_),
    .B(_042_),
    .Y(_043_)
  );
  NAND _101_ (
    .A(reset_L),
    .B(data_000[3]),
    .Y(_044_)
  );
  NOT _102_ (
    .A(_044_),
    .Y(_045_)
  );
  NOR _103_ (
    .A(_024_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _104_ (
    .A(_043_),
    .B(_046_),
    .Y(_000_[3])
  );
  NOR _105_ (
    .A(clk_2f),
    .B(data_11[4]),
    .Y(_047_)
  );
  NOR _106_ (
    .A(_016_),
    .B(data_00[4]),
    .Y(_048_)
  );
  NOR _107_ (
    .A(_047_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _108_ (
    .A(_025_),
    .B(_049_),
    .Y(_050_)
  );
  NAND _109_ (
    .A(reset_L),
    .B(data_000[4]),
    .Y(_051_)
  );
  NOT _110_ (
    .A(_051_),
    .Y(_052_)
  );
  NOR _111_ (
    .A(_024_),
    .B(_052_),
    .Y(_053_)
  );
  NOR _112_ (
    .A(_050_),
    .B(_053_),
    .Y(_000_[4])
  );
  NOR _113_ (
    .A(clk_2f),
    .B(data_11[5]),
    .Y(_054_)
  );
  NOR _114_ (
    .A(_016_),
    .B(data_00[5]),
    .Y(_055_)
  );
  NOR _115_ (
    .A(_054_),
    .B(_055_),
    .Y(_056_)
  );
  NOR _116_ (
    .A(_025_),
    .B(_056_),
    .Y(_057_)
  );
  NAND _117_ (
    .A(reset_L),
    .B(data_000[5]),
    .Y(_058_)
  );
  NOT _118_ (
    .A(_058_),
    .Y(_059_)
  );
  NOR _119_ (
    .A(_024_),
    .B(_059_),
    .Y(_060_)
  );
  NOR _120_ (
    .A(_057_),
    .B(_060_),
    .Y(_000_[5])
  );
  NOR _121_ (
    .A(clk_2f),
    .B(data_11[6]),
    .Y(_061_)
  );
  NOR _122_ (
    .A(_016_),
    .B(data_00[6]),
    .Y(_062_)
  );
  NOR _123_ (
    .A(_061_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _124_ (
    .A(_025_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _125_ (
    .A(reset_L),
    .B(data_000[6]),
    .Y(_065_)
  );
  NOT _126_ (
    .A(_065_),
    .Y(_066_)
  );
  NOR _127_ (
    .A(_024_),
    .B(_066_),
    .Y(_067_)
  );
  NOR _128_ (
    .A(_064_),
    .B(_067_),
    .Y(_000_[6])
  );
  NOR _129_ (
    .A(clk_2f),
    .B(data_11[7]),
    .Y(_068_)
  );
  NOR _130_ (
    .A(_016_),
    .B(data_00[7]),
    .Y(_069_)
  );
  NOR _131_ (
    .A(_068_),
    .B(_069_),
    .Y(_002_)
  );
  NOR _132_ (
    .A(_025_),
    .B(_002_),
    .Y(_003_)
  );
  NAND _133_ (
    .A(reset_L),
    .B(data_000[7]),
    .Y(_004_)
  );
  NOT _134_ (
    .A(_004_),
    .Y(_005_)
  );
  NOR _135_ (
    .A(_024_),
    .B(_005_),
    .Y(_006_)
  );
  NOR _136_ (
    .A(_003_),
    .B(_006_),
    .Y(_000_[7])
  );
  NAND _137_ (
    .A(_015_),
    .B(valid_000),
    .Y(_007_)
  );
  NAND _138_ (
    .A(_025_),
    .B(_007_),
    .Y(_001_)
  );
  NOR _139_ (
    .A(data_11[0]),
    .B(clk_2f),
    .Y(_008_)
  );
  NOR _140_ (
    .A(data_00[0]),
    .B(_016_),
    .Y(_009_)
  );
  NOR _141_ (
    .A(_008_),
    .B(_009_),
    .Y(_010_)
  );
  NOR _142_ (
    .A(_025_),
    .B(_010_),
    .Y(_011_)
  );
  NAND _143_ (
    .A(data_000[0]),
    .B(reset_L),
    .Y(_012_)
  );
  NOT _144_ (
    .A(_012_),
    .Y(_013_)
  );
  NOR _145_ (
    .A(_024_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _146_ (
    .A(_011_),
    .B(_014_),
    .Y(_000_[0])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _147_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(data_000[0])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _148_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(data_000[1])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _149_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(data_000[2])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _150_ (
    .C(clk_4f),
    .D(_000_[3]),
    .Q(data_000[3])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _151_ (
    .C(clk_4f),
    .D(_000_[4]),
    .Q(data_000[4])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _152_ (
    .C(clk_4f),
    .D(_000_[5]),
    .Q(data_000[5])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _153_ (
    .C(clk_4f),
    .D(_000_[6]),
    .Q(data_000[6])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _154_ (
    .C(clk_4f),
    .D(_000_[7]),
    .Q(data_000[7])
  );
  (* src = "MUX_L2.v:36" *)
  DFF _155_ (
    .C(clk_4f),
    .D(_001_),
    .Q(valid_000)
  );
endmodule
