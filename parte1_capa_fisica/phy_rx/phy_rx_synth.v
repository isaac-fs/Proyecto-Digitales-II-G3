/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* src = "DEMUX_L1.v:1" *)
module DEMUX_L1_synth(data_00, data_11, valid_00, valid_11, clk_f, clk_2f, data_0, data_1, data_2, data_3, valid_0, valid_1, valid_2, valid_3);
  (* src = "DEMUX_L1.v:30" *)
  wire [7:0] _000_;
  (* src = "DEMUX_L1.v:52" *)
  wire [7:0] _001_;
  (* src = "DEMUX_L1.v:78" *)
  wire [7:0] _002_;
  (* src = "DEMUX_L1.v:78" *)
  wire [7:0] _003_;
  (* src = "DEMUX_L1.v:78" *)
  wire [7:0] _004_;
  (* src = "DEMUX_L1.v:78" *)
  wire [7:0] _005_;
  (* src = "DEMUX_L1.v:30" *)
  wire [7:0] _006_;
  (* src = "DEMUX_L1.v:52" *)
  wire [7:0] _007_;
  (* src = "DEMUX_L1.v:30" *)
  wire _008_;
  (* src = "DEMUX_L1.v:52" *)
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  (* src = "DEMUX_L1.v:19" *)
  wire [7:0] c;
  (* src = "DEMUX_L1.v:7" *)
  input clk_2f;
  (* src = "DEMUX_L1.v:6" *)
  input clk_f;
  (* src = "DEMUX_L1.v:20" *)
  wire [7:0] d;
  (* src = "DEMUX_L1.v:8" *)
  output [7:0] data_0;
  (* src = "DEMUX_L1.v:2" *)
  input [7:0] data_00;
  (* src = "DEMUX_L1.v:75" *)
  wire [7:0] data_0_t;
  (* src = "DEMUX_L1.v:9" *)
  output [7:0] data_1;
  (* src = "DEMUX_L1.v:3" *)
  input [7:0] data_11;
  (* src = "DEMUX_L1.v:75" *)
  wire [7:0] data_1_t;
  (* src = "DEMUX_L1.v:10" *)
  output [7:0] data_2;
  (* src = "DEMUX_L1.v:75" *)
  wire [7:0] data_2_t;
  (* src = "DEMUX_L1.v:11" *)
  output [7:0] data_3;
  (* src = "DEMUX_L1.v:75" *)
  wire [7:0] data_3_t;
  (* src = "DEMUX_L1.v:21" *)
  wire [7:0] e;
  (* src = "DEMUX_L1.v:22" *)
  wire [7:0] f;
  (* src = "DEMUX_L1.v:12" *)
  output valid_0;
  (* src = "DEMUX_L1.v:4" *)
  input valid_00;
  (* src = "DEMUX_L1.v:76" *)
  wire valid_0_t;
  (* src = "DEMUX_L1.v:13" *)
  output valid_1;
  (* src = "DEMUX_L1.v:5" *)
  input valid_11;
  (* src = "DEMUX_L1.v:76" *)
  wire valid_1_t;
  (* src = "DEMUX_L1.v:14" *)
  output valid_2;
  (* src = "DEMUX_L1.v:76" *)
  wire valid_2_t;
  (* src = "DEMUX_L1.v:15" *)
  output valid_3;
  (* src = "DEMUX_L1.v:76" *)
  wire valid_3_t;
  (* src = "DEMUX_L1.v:24" *)
  wire validt_0;
  (* src = "DEMUX_L1.v:25" *)
  wire validt_1;
  (* src = "DEMUX_L1.v:26" *)
  wire validt_2;
  (* src = "DEMUX_L1.v:27" *)
  wire validt_3;
  NOT _182_ (
    .A(clk_2f),
    .Y(_010_)
  );
  NOT _183_ (
    .A(clk_f),
    .Y(_024_)
  );
  NOT _184_ (
    .A(valid_00),
    .Y(_064_)
  );
  NOT _185_ (
    .A(valid_11),
    .Y(_065_)
  );
  NOT _186_ (
    .A(validt_0),
    .Y(_066_)
  );
  NOT _187_ (
    .A(validt_1),
    .Y(_067_)
  );
  NOT _188_ (
    .A(validt_3),
    .Y(_068_)
  );
  NOT _189_ (
    .A(validt_2),
    .Y(_069_)
  );
  NAND _190_ (
    .A(c[6]),
    .B(_064_),
    .Y(_070_)
  );
  NAND _191_ (
    .A(data_00[6]),
    .B(valid_00),
    .Y(_071_)
  );
  NAND _192_ (
    .A(_070_),
    .B(_071_),
    .Y(_000_[6])
  );
  NAND _193_ (
    .A(_064_),
    .B(c[5]),
    .Y(_072_)
  );
  NAND _194_ (
    .A(valid_00),
    .B(data_00[5]),
    .Y(_073_)
  );
  NAND _195_ (
    .A(_072_),
    .B(_073_),
    .Y(_000_[5])
  );
  NAND _196_ (
    .A(_064_),
    .B(c[4]),
    .Y(_074_)
  );
  NAND _197_ (
    .A(valid_00),
    .B(data_00[4]),
    .Y(_075_)
  );
  NAND _198_ (
    .A(_074_),
    .B(_075_),
    .Y(_000_[4])
  );
  NAND _199_ (
    .A(_064_),
    .B(c[3]),
    .Y(_076_)
  );
  NAND _200_ (
    .A(valid_00),
    .B(data_00[3]),
    .Y(_077_)
  );
  NAND _201_ (
    .A(_076_),
    .B(_077_),
    .Y(_000_[3])
  );
  NAND _202_ (
    .A(_064_),
    .B(c[2]),
    .Y(_078_)
  );
  NAND _203_ (
    .A(valid_00),
    .B(data_00[2]),
    .Y(_079_)
  );
  NAND _204_ (
    .A(_078_),
    .B(_079_),
    .Y(_000_[2])
  );
  NAND _205_ (
    .A(_064_),
    .B(c[1]),
    .Y(_080_)
  );
  NAND _206_ (
    .A(valid_00),
    .B(data_00[1]),
    .Y(_081_)
  );
  NAND _207_ (
    .A(_080_),
    .B(_081_),
    .Y(_000_[1])
  );
  NAND _208_ (
    .A(_064_),
    .B(c[0]),
    .Y(_082_)
  );
  NAND _209_ (
    .A(valid_00),
    .B(data_00[0]),
    .Y(_083_)
  );
  NAND _210_ (
    .A(_082_),
    .B(_083_),
    .Y(_000_[0])
  );
  NAND _211_ (
    .A(e[6]),
    .B(_065_),
    .Y(_084_)
  );
  NAND _212_ (
    .A(data_11[6]),
    .B(valid_11),
    .Y(_085_)
  );
  NAND _213_ (
    .A(_084_),
    .B(_085_),
    .Y(_006_[6])
  );
  NAND _214_ (
    .A(_065_),
    .B(e[5]),
    .Y(_086_)
  );
  NAND _215_ (
    .A(valid_11),
    .B(data_11[5]),
    .Y(_087_)
  );
  NAND _216_ (
    .A(_086_),
    .B(_087_),
    .Y(_006_[5])
  );
  NAND _217_ (
    .A(_065_),
    .B(e[4]),
    .Y(_088_)
  );
  NAND _218_ (
    .A(valid_11),
    .B(data_11[4]),
    .Y(_089_)
  );
  NAND _219_ (
    .A(_088_),
    .B(_089_),
    .Y(_006_[4])
  );
  NAND _220_ (
    .A(_065_),
    .B(e[3]),
    .Y(_090_)
  );
  NAND _221_ (
    .A(valid_11),
    .B(data_11[3]),
    .Y(_091_)
  );
  NAND _222_ (
    .A(_090_),
    .B(_091_),
    .Y(_006_[3])
  );
  NAND _223_ (
    .A(_065_),
    .B(e[2]),
    .Y(_092_)
  );
  NAND _224_ (
    .A(valid_11),
    .B(data_11[2]),
    .Y(_093_)
  );
  NAND _225_ (
    .A(_092_),
    .B(_093_),
    .Y(_006_[2])
  );
  NAND _226_ (
    .A(_065_),
    .B(e[1]),
    .Y(_094_)
  );
  NAND _227_ (
    .A(valid_11),
    .B(data_11[1]),
    .Y(_095_)
  );
  NAND _228_ (
    .A(_094_),
    .B(_095_),
    .Y(_006_[1])
  );
  NAND _229_ (
    .A(_065_),
    .B(e[0]),
    .Y(_096_)
  );
  NAND _230_ (
    .A(valid_11),
    .B(data_11[0]),
    .Y(_097_)
  );
  NAND _231_ (
    .A(_096_),
    .B(_097_),
    .Y(_006_[0])
  );
  NAND _232_ (
    .A(_064_),
    .B(d[6]),
    .Y(_098_)
  );
  NAND _233_ (
    .A(_071_),
    .B(_098_),
    .Y(_001_[6])
  );
  NAND _234_ (
    .A(_064_),
    .B(d[5]),
    .Y(_099_)
  );
  NAND _235_ (
    .A(_073_),
    .B(_099_),
    .Y(_001_[5])
  );
  NAND _236_ (
    .A(_064_),
    .B(d[4]),
    .Y(_100_)
  );
  NAND _237_ (
    .A(_075_),
    .B(_100_),
    .Y(_001_[4])
  );
  NAND _238_ (
    .A(_064_),
    .B(d[3]),
    .Y(_101_)
  );
  NAND _239_ (
    .A(_077_),
    .B(_101_),
    .Y(_001_[3])
  );
  NAND _240_ (
    .A(_064_),
    .B(d[2]),
    .Y(_102_)
  );
  NAND _241_ (
    .A(_079_),
    .B(_102_),
    .Y(_001_[2])
  );
  NAND _242_ (
    .A(_064_),
    .B(d[1]),
    .Y(_103_)
  );
  NAND _243_ (
    .A(_081_),
    .B(_103_),
    .Y(_001_[1])
  );
  NAND _244_ (
    .A(_064_),
    .B(d[0]),
    .Y(_104_)
  );
  NAND _245_ (
    .A(_083_),
    .B(_104_),
    .Y(_001_[0])
  );
  NAND _246_ (
    .A(_065_),
    .B(f[6]),
    .Y(_105_)
  );
  NAND _247_ (
    .A(_085_),
    .B(_105_),
    .Y(_007_[6])
  );
  NAND _248_ (
    .A(_065_),
    .B(f[5]),
    .Y(_106_)
  );
  NAND _249_ (
    .A(_087_),
    .B(_106_),
    .Y(_007_[5])
  );
  NAND _250_ (
    .A(_065_),
    .B(f[4]),
    .Y(_107_)
  );
  NAND _251_ (
    .A(_089_),
    .B(_107_),
    .Y(_007_[4])
  );
  NAND _252_ (
    .A(_065_),
    .B(f[3]),
    .Y(_108_)
  );
  NAND _253_ (
    .A(_091_),
    .B(_108_),
    .Y(_007_[3])
  );
  NAND _254_ (
    .A(_065_),
    .B(f[2]),
    .Y(_109_)
  );
  NAND _255_ (
    .A(_093_),
    .B(_109_),
    .Y(_007_[2])
  );
  NAND _256_ (
    .A(_065_),
    .B(f[1]),
    .Y(_110_)
  );
  NAND _257_ (
    .A(_095_),
    .B(_110_),
    .Y(_007_[1])
  );
  NAND _258_ (
    .A(_065_),
    .B(f[0]),
    .Y(_111_)
  );
  NAND _259_ (
    .A(_097_),
    .B(_111_),
    .Y(_007_[0])
  );
  NAND _260_ (
    .A(c[6]),
    .B(validt_0),
    .Y(_112_)
  );
  NAND _261_ (
    .A(data_0[6]),
    .B(_066_),
    .Y(_113_)
  );
  NAND _262_ (
    .A(_112_),
    .B(_113_),
    .Y(_002_[6])
  );
  NAND _263_ (
    .A(c[5]),
    .B(validt_0),
    .Y(_114_)
  );
  NAND _264_ (
    .A(_066_),
    .B(data_0[5]),
    .Y(_115_)
  );
  NAND _265_ (
    .A(_114_),
    .B(_115_),
    .Y(_002_[5])
  );
  NAND _266_ (
    .A(c[4]),
    .B(validt_0),
    .Y(_116_)
  );
  NAND _267_ (
    .A(_066_),
    .B(data_0[4]),
    .Y(_117_)
  );
  NAND _268_ (
    .A(_116_),
    .B(_117_),
    .Y(_002_[4])
  );
  NAND _269_ (
    .A(c[3]),
    .B(validt_0),
    .Y(_118_)
  );
  NAND _270_ (
    .A(_066_),
    .B(data_0[3]),
    .Y(_119_)
  );
  NAND _271_ (
    .A(_118_),
    .B(_119_),
    .Y(_002_[3])
  );
  NAND _272_ (
    .A(c[2]),
    .B(validt_0),
    .Y(_120_)
  );
  NAND _273_ (
    .A(_066_),
    .B(data_0[2]),
    .Y(_121_)
  );
  NAND _274_ (
    .A(_120_),
    .B(_121_),
    .Y(_002_[2])
  );
  NAND _275_ (
    .A(c[1]),
    .B(validt_0),
    .Y(_122_)
  );
  NAND _276_ (
    .A(_066_),
    .B(data_0[1]),
    .Y(_123_)
  );
  NAND _277_ (
    .A(_122_),
    .B(_123_),
    .Y(_002_[1])
  );
  NAND _278_ (
    .A(c[0]),
    .B(validt_0),
    .Y(_124_)
  );
  NAND _279_ (
    .A(_066_),
    .B(data_0[0]),
    .Y(_125_)
  );
  NAND _280_ (
    .A(_124_),
    .B(_125_),
    .Y(_002_[0])
  );
  NAND _281_ (
    .A(d[6]),
    .B(validt_1),
    .Y(_126_)
  );
  NAND _282_ (
    .A(data_1[6]),
    .B(_067_),
    .Y(_127_)
  );
  NAND _283_ (
    .A(_126_),
    .B(_127_),
    .Y(_003_[6])
  );
  NAND _284_ (
    .A(d[5]),
    .B(validt_1),
    .Y(_128_)
  );
  NAND _285_ (
    .A(_067_),
    .B(data_1[5]),
    .Y(_129_)
  );
  NAND _286_ (
    .A(_128_),
    .B(_129_),
    .Y(_003_[5])
  );
  NAND _287_ (
    .A(d[4]),
    .B(validt_1),
    .Y(_130_)
  );
  NAND _288_ (
    .A(_067_),
    .B(data_1[4]),
    .Y(_131_)
  );
  NAND _289_ (
    .A(_130_),
    .B(_131_),
    .Y(_003_[4])
  );
  NAND _290_ (
    .A(d[3]),
    .B(validt_1),
    .Y(_132_)
  );
  NAND _291_ (
    .A(_067_),
    .B(data_1[3]),
    .Y(_133_)
  );
  NAND _292_ (
    .A(_132_),
    .B(_133_),
    .Y(_003_[3])
  );
  NAND _293_ (
    .A(d[2]),
    .B(validt_1),
    .Y(_134_)
  );
  NAND _294_ (
    .A(_067_),
    .B(data_1[2]),
    .Y(_135_)
  );
  NAND _295_ (
    .A(_134_),
    .B(_135_),
    .Y(_003_[2])
  );
  NAND _296_ (
    .A(d[1]),
    .B(validt_1),
    .Y(_136_)
  );
  NAND _297_ (
    .A(_067_),
    .B(data_1[1]),
    .Y(_137_)
  );
  NAND _298_ (
    .A(_136_),
    .B(_137_),
    .Y(_003_[1])
  );
  NAND _299_ (
    .A(d[0]),
    .B(validt_1),
    .Y(_138_)
  );
  NAND _300_ (
    .A(_067_),
    .B(data_1[0]),
    .Y(_139_)
  );
  NAND _301_ (
    .A(_138_),
    .B(_139_),
    .Y(_003_[0])
  );
  NAND _302_ (
    .A(f[6]),
    .B(validt_3),
    .Y(_140_)
  );
  NAND _303_ (
    .A(data_3[6]),
    .B(_068_),
    .Y(_141_)
  );
  NAND _304_ (
    .A(_140_),
    .B(_141_),
    .Y(_005_[6])
  );
  NAND _305_ (
    .A(f[5]),
    .B(validt_3),
    .Y(_142_)
  );
  NAND _306_ (
    .A(_068_),
    .B(data_3[5]),
    .Y(_143_)
  );
  NAND _307_ (
    .A(_142_),
    .B(_143_),
    .Y(_005_[5])
  );
  NAND _308_ (
    .A(f[4]),
    .B(validt_3),
    .Y(_144_)
  );
  NAND _309_ (
    .A(_068_),
    .B(data_3[4]),
    .Y(_145_)
  );
  NAND _310_ (
    .A(_144_),
    .B(_145_),
    .Y(_005_[4])
  );
  NAND _311_ (
    .A(f[3]),
    .B(validt_3),
    .Y(_146_)
  );
  NAND _312_ (
    .A(_068_),
    .B(data_3[3]),
    .Y(_147_)
  );
  NAND _313_ (
    .A(_146_),
    .B(_147_),
    .Y(_005_[3])
  );
  NAND _314_ (
    .A(f[2]),
    .B(validt_3),
    .Y(_148_)
  );
  NAND _315_ (
    .A(_068_),
    .B(data_3[2]),
    .Y(_149_)
  );
  NAND _316_ (
    .A(_148_),
    .B(_149_),
    .Y(_005_[2])
  );
  NAND _317_ (
    .A(f[1]),
    .B(validt_3),
    .Y(_150_)
  );
  NAND _318_ (
    .A(_068_),
    .B(data_3[1]),
    .Y(_151_)
  );
  NAND _319_ (
    .A(_150_),
    .B(_151_),
    .Y(_005_[1])
  );
  NAND _320_ (
    .A(f[0]),
    .B(validt_3),
    .Y(_152_)
  );
  NAND _321_ (
    .A(_068_),
    .B(data_3[0]),
    .Y(_153_)
  );
  NAND _322_ (
    .A(_152_),
    .B(_153_),
    .Y(_005_[0])
  );
  NAND _323_ (
    .A(e[6]),
    .B(validt_2),
    .Y(_154_)
  );
  NAND _324_ (
    .A(data_2[6]),
    .B(_069_),
    .Y(_155_)
  );
  NAND _325_ (
    .A(_154_),
    .B(_155_),
    .Y(_004_[6])
  );
  NAND _326_ (
    .A(e[5]),
    .B(validt_2),
    .Y(_156_)
  );
  NAND _327_ (
    .A(_069_),
    .B(data_2[5]),
    .Y(_157_)
  );
  NAND _328_ (
    .A(_156_),
    .B(_157_),
    .Y(_004_[5])
  );
  NAND _329_ (
    .A(e[4]),
    .B(validt_2),
    .Y(_158_)
  );
  NAND _330_ (
    .A(_069_),
    .B(data_2[4]),
    .Y(_159_)
  );
  NAND _331_ (
    .A(_158_),
    .B(_159_),
    .Y(_004_[4])
  );
  NAND _332_ (
    .A(e[3]),
    .B(validt_2),
    .Y(_160_)
  );
  NAND _333_ (
    .A(_069_),
    .B(data_2[3]),
    .Y(_161_)
  );
  NAND _334_ (
    .A(_160_),
    .B(_161_),
    .Y(_004_[3])
  );
  NAND _335_ (
    .A(e[2]),
    .B(validt_2),
    .Y(_162_)
  );
  NAND _336_ (
    .A(_069_),
    .B(data_2[2]),
    .Y(_163_)
  );
  NAND _337_ (
    .A(_162_),
    .B(_163_),
    .Y(_004_[2])
  );
  NAND _338_ (
    .A(e[1]),
    .B(validt_2),
    .Y(_164_)
  );
  NAND _339_ (
    .A(_069_),
    .B(data_2[1]),
    .Y(_165_)
  );
  NAND _340_ (
    .A(_164_),
    .B(_165_),
    .Y(_004_[1])
  );
  NAND _341_ (
    .A(e[0]),
    .B(validt_2),
    .Y(_166_)
  );
  NAND _342_ (
    .A(_069_),
    .B(data_2[0]),
    .Y(_167_)
  );
  NAND _343_ (
    .A(_166_),
    .B(_167_),
    .Y(_004_[0])
  );
  NAND _344_ (
    .A(_065_),
    .B(f[7]),
    .Y(_168_)
  );
  NAND _345_ (
    .A(valid_11),
    .B(data_11[7]),
    .Y(_169_)
  );
  NAND _346_ (
    .A(_168_),
    .B(_169_),
    .Y(_007_[7])
  );
  NAND _347_ (
    .A(_064_),
    .B(d[7]),
    .Y(_170_)
  );
  NAND _348_ (
    .A(valid_00),
    .B(data_00[7]),
    .Y(_171_)
  );
  NAND _349_ (
    .A(_170_),
    .B(_171_),
    .Y(_001_[7])
  );
  NAND _350_ (
    .A(_065_),
    .B(e[7]),
    .Y(_172_)
  );
  NAND _351_ (
    .A(_169_),
    .B(_172_),
    .Y(_006_[7])
  );
  NAND _352_ (
    .A(_064_),
    .B(c[7]),
    .Y(_173_)
  );
  NAND _353_ (
    .A(_171_),
    .B(_173_),
    .Y(_000_[7])
  );
  NAND _354_ (
    .A(validt_3),
    .B(f[7]),
    .Y(_174_)
  );
  NAND _355_ (
    .A(_068_),
    .B(data_3[7]),
    .Y(_175_)
  );
  NAND _356_ (
    .A(_174_),
    .B(_175_),
    .Y(_005_[7])
  );
  NAND _357_ (
    .A(validt_2),
    .B(e[7]),
    .Y(_176_)
  );
  NAND _358_ (
    .A(_069_),
    .B(data_2[7]),
    .Y(_177_)
  );
  NAND _359_ (
    .A(_176_),
    .B(_177_),
    .Y(_004_[7])
  );
  NAND _360_ (
    .A(validt_1),
    .B(d[7]),
    .Y(_178_)
  );
  NAND _361_ (
    .A(_067_),
    .B(data_1[7]),
    .Y(_179_)
  );
  NAND _362_ (
    .A(_178_),
    .B(_179_),
    .Y(_003_[7])
  );
  NAND _363_ (
    .A(validt_0),
    .B(c[7]),
    .Y(_180_)
  );
  NAND _364_ (
    .A(_066_),
    .B(data_0[7]),
    .Y(_181_)
  );
  NAND _365_ (
    .A(_180_),
    .B(_181_),
    .Y(_002_[7])
  );
  NOT _366_ (
    .A(clk_2f),
    .Y(_011_)
  );
  NOT _367_ (
    .A(clk_2f),
    .Y(_012_)
  );
  NOT _368_ (
    .A(clk_2f),
    .Y(_013_)
  );
  NOT _369_ (
    .A(clk_2f),
    .Y(_014_)
  );
  NOT _370_ (
    .A(clk_2f),
    .Y(_015_)
  );
  NOT _371_ (
    .A(clk_2f),
    .Y(_016_)
  );
  NOT _372_ (
    .A(clk_2f),
    .Y(_017_)
  );
  NOT _373_ (
    .A(clk_2f),
    .Y(_018_)
  );
  NOT _374_ (
    .A(clk_2f),
    .Y(_019_)
  );
  NOT _375_ (
    .A(clk_2f),
    .Y(_020_)
  );
  NOT _376_ (
    .A(clk_2f),
    .Y(_021_)
  );
  NOT _377_ (
    .A(clk_2f),
    .Y(_022_)
  );
  NOT _378_ (
    .A(clk_2f),
    .Y(_023_)
  );
  NOT _379_ (
    .A(clk_f),
    .Y(_025_)
  );
  NOT _380_ (
    .A(clk_f),
    .Y(_026_)
  );
  NOT _381_ (
    .A(clk_f),
    .Y(_027_)
  );
  NOT _382_ (
    .A(clk_f),
    .Y(_028_)
  );
  NOT _383_ (
    .A(clk_f),
    .Y(_029_)
  );
  NOT _384_ (
    .A(clk_f),
    .Y(_030_)
  );
  NOT _385_ (
    .A(clk_f),
    .Y(_031_)
  );
  NOT _386_ (
    .A(clk_f),
    .Y(_032_)
  );
  NOT _387_ (
    .A(clk_f),
    .Y(_033_)
  );
  NOT _388_ (
    .A(clk_f),
    .Y(_034_)
  );
  NOT _389_ (
    .A(clk_f),
    .Y(_035_)
  );
  NOT _390_ (
    .A(clk_f),
    .Y(_036_)
  );
  NOT _391_ (
    .A(clk_f),
    .Y(_037_)
  );
  NOT _392_ (
    .A(clk_f),
    .Y(_038_)
  );
  NOT _393_ (
    .A(clk_f),
    .Y(_039_)
  );
  NOT _394_ (
    .A(clk_f),
    .Y(_040_)
  );
  NOT _395_ (
    .A(clk_f),
    .Y(_041_)
  );
  NOT _396_ (
    .A(clk_f),
    .Y(_042_)
  );
  NOT _397_ (
    .A(clk_f),
    .Y(_043_)
  );
  NOT _398_ (
    .A(clk_f),
    .Y(_044_)
  );
  NOT _399_ (
    .A(clk_f),
    .Y(_045_)
  );
  NOT _400_ (
    .A(clk_f),
    .Y(_046_)
  );
  NOT _401_ (
    .A(clk_f),
    .Y(_047_)
  );
  NOT _402_ (
    .A(clk_f),
    .Y(_048_)
  );
  NOT _403_ (
    .A(clk_f),
    .Y(_049_)
  );
  NOT _404_ (
    .A(clk_f),
    .Y(_050_)
  );
  NOT _405_ (
    .A(clk_f),
    .Y(_051_)
  );
  NOT _406_ (
    .A(clk_f),
    .Y(_052_)
  );
  NOT _407_ (
    .A(clk_f),
    .Y(_053_)
  );
  NOT _408_ (
    .A(clk_f),
    .Y(_054_)
  );
  NOT _409_ (
    .A(clk_f),
    .Y(_055_)
  );
  NOT _410_ (
    .A(clk_f),
    .Y(_056_)
  );
  NOT _411_ (
    .A(clk_f),
    .Y(_057_)
  );
  NOT _412_ (
    .A(clk_f),
    .Y(_058_)
  );
  NOT _413_ (
    .A(clk_f),
    .Y(_059_)
  );
  NOT _414_ (
    .A(clk_2f),
    .Y(_060_)
  );
  NOT _415_ (
    .A(clk_2f),
    .Y(_061_)
  );
  NOT _416_ (
    .A(clk_2f),
    .Y(_062_)
  );
  NOT _417_ (
    .A(clk_2f),
    .Y(_063_)
  );
  BUF _418_ (
    .A(valid_11),
    .Y(_009_)
  );
  BUF _419_ (
    .A(valid_00),
    .Y(_008_)
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _420_ (
    .C(clk_f),
    .D(data_0_t[0]),
    .Q(data_0[0])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _421_ (
    .C(clk_f),
    .D(data_0_t[1]),
    .Q(data_0[1])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _422_ (
    .C(clk_f),
    .D(data_0_t[2]),
    .Q(data_0[2])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _423_ (
    .C(clk_f),
    .D(data_0_t[3]),
    .Q(data_0[3])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _424_ (
    .C(clk_f),
    .D(data_0_t[4]),
    .Q(data_0[4])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _425_ (
    .C(clk_f),
    .D(data_0_t[5]),
    .Q(data_0[5])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _426_ (
    .C(clk_f),
    .D(data_0_t[6]),
    .Q(data_0[6])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _427_ (
    .C(clk_f),
    .D(data_0_t[7]),
    .Q(data_0[7])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _428_ (
    .C(clk_f),
    .D(data_1_t[0]),
    .Q(data_1[0])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _429_ (
    .C(clk_f),
    .D(data_1_t[1]),
    .Q(data_1[1])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _430_ (
    .C(clk_f),
    .D(data_1_t[2]),
    .Q(data_1[2])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _431_ (
    .C(clk_f),
    .D(data_1_t[3]),
    .Q(data_1[3])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _432_ (
    .C(clk_f),
    .D(data_1_t[4]),
    .Q(data_1[4])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _433_ (
    .C(clk_f),
    .D(data_1_t[5]),
    .Q(data_1[5])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _434_ (
    .C(clk_f),
    .D(data_1_t[6]),
    .Q(data_1[6])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _435_ (
    .C(clk_f),
    .D(data_1_t[7]),
    .Q(data_1[7])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _436_ (
    .C(clk_f),
    .D(data_2_t[0]),
    .Q(data_2[0])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _437_ (
    .C(clk_f),
    .D(data_2_t[1]),
    .Q(data_2[1])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _438_ (
    .C(clk_f),
    .D(data_2_t[2]),
    .Q(data_2[2])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _439_ (
    .C(clk_f),
    .D(data_2_t[3]),
    .Q(data_2[3])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _440_ (
    .C(clk_f),
    .D(data_2_t[4]),
    .Q(data_2[4])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _441_ (
    .C(clk_f),
    .D(data_2_t[5]),
    .Q(data_2[5])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _442_ (
    .C(clk_f),
    .D(data_2_t[6]),
    .Q(data_2[6])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _443_ (
    .C(clk_f),
    .D(data_2_t[7]),
    .Q(data_2[7])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _444_ (
    .C(clk_f),
    .D(data_3_t[0]),
    .Q(data_3[0])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _445_ (
    .C(clk_f),
    .D(data_3_t[1]),
    .Q(data_3[1])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _446_ (
    .C(clk_f),
    .D(data_3_t[2]),
    .Q(data_3[2])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _447_ (
    .C(clk_f),
    .D(data_3_t[3]),
    .Q(data_3[3])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _448_ (
    .C(clk_f),
    .D(data_3_t[4]),
    .Q(data_3[4])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _449_ (
    .C(clk_f),
    .D(data_3_t[5]),
    .Q(data_3[5])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _450_ (
    .C(clk_f),
    .D(data_3_t[6]),
    .Q(data_3[6])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _451_ (
    .C(clk_f),
    .D(data_3_t[7]),
    .Q(data_3[7])
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _452_ (
    .C(clk_f),
    .D(valid_0_t),
    .Q(valid_0)
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _453_ (
    .C(clk_f),
    .D(valid_1_t),
    .Q(valid_1)
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _454_ (
    .C(clk_f),
    .D(valid_2_t),
    .Q(valid_2)
  );
  (* src = "DEMUX_L1.v:131" *)
  DFF _455_ (
    .C(clk_f),
    .D(valid_3_t),
    .Q(valid_3)
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _456_ (
    .C(_051_),
    .D(_002_[0]),
    .Q(data_0_t[0])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _457_ (
    .C(_050_),
    .D(_002_[1]),
    .Q(data_0_t[1])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _458_ (
    .C(_049_),
    .D(_002_[2]),
    .Q(data_0_t[2])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _459_ (
    .C(_048_),
    .D(_002_[3]),
    .Q(data_0_t[3])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _460_ (
    .C(_047_),
    .D(_002_[4]),
    .Q(data_0_t[4])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _461_ (
    .C(_046_),
    .D(_002_[5]),
    .Q(data_0_t[5])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _462_ (
    .C(_045_),
    .D(_002_[6]),
    .Q(data_0_t[6])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _463_ (
    .C(_052_),
    .D(_002_[7]),
    .Q(data_0_t[7])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _464_ (
    .C(_044_),
    .D(_003_[0]),
    .Q(data_1_t[0])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _465_ (
    .C(_043_),
    .D(_003_[1]),
    .Q(data_1_t[1])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _466_ (
    .C(_042_),
    .D(_003_[2]),
    .Q(data_1_t[2])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _467_ (
    .C(_041_),
    .D(_003_[3]),
    .Q(data_1_t[3])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _468_ (
    .C(_040_),
    .D(_003_[4]),
    .Q(data_1_t[4])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _469_ (
    .C(_039_),
    .D(_003_[5]),
    .Q(data_1_t[5])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _470_ (
    .C(_038_),
    .D(_003_[6]),
    .Q(data_1_t[6])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _471_ (
    .C(_053_),
    .D(_003_[7]),
    .Q(data_1_t[7])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _472_ (
    .C(_037_),
    .D(_004_[0]),
    .Q(data_2_t[0])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _473_ (
    .C(_036_),
    .D(_004_[1]),
    .Q(data_2_t[1])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _474_ (
    .C(_035_),
    .D(_004_[2]),
    .Q(data_2_t[2])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _475_ (
    .C(_034_),
    .D(_004_[3]),
    .Q(data_2_t[3])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _476_ (
    .C(_033_),
    .D(_004_[4]),
    .Q(data_2_t[4])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _477_ (
    .C(_032_),
    .D(_004_[5]),
    .Q(data_2_t[5])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _478_ (
    .C(_031_),
    .D(_004_[6]),
    .Q(data_2_t[6])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _479_ (
    .C(_054_),
    .D(_004_[7]),
    .Q(data_2_t[7])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _480_ (
    .C(_030_),
    .D(_005_[0]),
    .Q(data_3_t[0])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _481_ (
    .C(_029_),
    .D(_005_[1]),
    .Q(data_3_t[1])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _482_ (
    .C(_028_),
    .D(_005_[2]),
    .Q(data_3_t[2])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _483_ (
    .C(_027_),
    .D(_005_[3]),
    .Q(data_3_t[3])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _484_ (
    .C(_026_),
    .D(_005_[4]),
    .Q(data_3_t[4])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _485_ (
    .C(_025_),
    .D(_005_[5]),
    .Q(data_3_t[5])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _486_ (
    .C(_024_),
    .D(_005_[6]),
    .Q(data_3_t[6])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _487_ (
    .C(_055_),
    .D(_005_[7]),
    .Q(data_3_t[7])
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _488_ (
    .C(_056_),
    .D(validt_0),
    .Q(valid_0_t)
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _489_ (
    .C(_057_),
    .D(validt_1),
    .Q(valid_1_t)
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _490_ (
    .C(_058_),
    .D(validt_2),
    .Q(valid_2_t)
  );
  (* src = "DEMUX_L1.v:78" *)
  DFF _491_ (
    .C(_059_),
    .D(validt_3),
    .Q(valid_3_t)
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _492_ (
    .C(_023_),
    .D(_001_[0]),
    .Q(d[0])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _493_ (
    .C(_022_),
    .D(_001_[1]),
    .Q(d[1])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _494_ (
    .C(_021_),
    .D(_001_[2]),
    .Q(d[2])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _495_ (
    .C(_020_),
    .D(_001_[3]),
    .Q(d[3])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _496_ (
    .C(_019_),
    .D(_001_[4]),
    .Q(d[4])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _497_ (
    .C(_018_),
    .D(_001_[5]),
    .Q(d[5])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _498_ (
    .C(_017_),
    .D(_001_[6]),
    .Q(d[6])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _499_ (
    .C(_060_),
    .D(_001_[7]),
    .Q(d[7])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _500_ (
    .C(_016_),
    .D(_007_[0]),
    .Q(f[0])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _501_ (
    .C(_015_),
    .D(_007_[1]),
    .Q(f[1])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _502_ (
    .C(_014_),
    .D(_007_[2]),
    .Q(f[2])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _503_ (
    .C(_013_),
    .D(_007_[3]),
    .Q(f[3])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _504_ (
    .C(_012_),
    .D(_007_[4]),
    .Q(f[4])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _505_ (
    .C(_011_),
    .D(_007_[5]),
    .Q(f[5])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _506_ (
    .C(_010_),
    .D(_007_[6]),
    .Q(f[6])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _507_ (
    .C(_061_),
    .D(_007_[7]),
    .Q(f[7])
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _508_ (
    .C(_062_),
    .D(_009_),
    .Q(validt_1)
  );
  (* src = "DEMUX_L1.v:52" *)
  DFF _509_ (
    .C(_063_),
    .D(_008_),
    .Q(validt_3)
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _510_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(c[0])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _511_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(c[1])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _512_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(c[2])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _513_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(c[3])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _514_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(c[4])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _515_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(c[5])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _516_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(c[6])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _517_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(c[7])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _518_ (
    .C(clk_2f),
    .D(_006_[0]),
    .Q(e[0])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _519_ (
    .C(clk_2f),
    .D(_006_[1]),
    .Q(e[1])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _520_ (
    .C(clk_2f),
    .D(_006_[2]),
    .Q(e[2])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _521_ (
    .C(clk_2f),
    .D(_006_[3]),
    .Q(e[3])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _522_ (
    .C(clk_2f),
    .D(_006_[4]),
    .Q(e[4])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _523_ (
    .C(clk_2f),
    .D(_006_[5]),
    .Q(e[5])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _524_ (
    .C(clk_2f),
    .D(_006_[6]),
    .Q(e[6])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _525_ (
    .C(clk_2f),
    .D(_006_[7]),
    .Q(e[7])
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _526_ (
    .C(clk_2f),
    .D(_008_),
    .Q(validt_0)
  );
  (* src = "DEMUX_L1.v:30" *)
  DFF _527_ (
    .C(clk_2f),
    .D(_009_),
    .Q(validt_2)
  );
endmodule

(* src = "DEMUX_L2.v:1" *)
module DEMUX_L2_synth(data_000, valid_000, clk_4f, clk_2f, data_00, data_11, valid_00, valid_11);
  (* src = "DEMUX_L2.v:20" *)
  wire [7:0] _000_;
  (* src = "DEMUX_L2.v:33" *)
  wire [7:0] _001_;
  (* src = "DEMUX_L2.v:45" *)
  wire [7:0] _002_;
  (* src = "DEMUX_L2.v:59" *)
  wire [7:0] _003_;
  (* src = "DEMUX_L2.v:20" *)
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  (* src = "DEMUX_L2.v:13" *)
  wire [7:0] a;
  (* src = "DEMUX_L2.v:14" *)
  wire [7:0] b;
  (* src = "DEMUX_L2.v:6" *)
  input clk_2f;
  (* src = "DEMUX_L2.v:5" *)
  input clk_4f;
  (* src = "DEMUX_L2.v:7" *)
  output [7:0] data_00;
  (* src = "DEMUX_L2.v:2" *)
  input [7:0] data_000;
  (* src = "DEMUX_L2.v:8" *)
  output [7:0] data_11;
  (* src = "DEMUX_L2.v:9" *)
  output valid_00;
  (* src = "DEMUX_L2.v:3" *)
  input valid_000;
  (* src = "DEMUX_L2.v:10" *)
  output valid_11;
  (* src = "DEMUX_L2.v:15" *)
  wire validt_00;
  (* src = "DEMUX_L2.v:16" *)
  wire validt_11;
  NOT _073_ (
    .A(clk_4f),
    .Y(_005_)
  );
  NOT _074_ (
    .A(valid_000),
    .Y(_064_)
  );
  NOT _075_ (
    .A(validt_11),
    .Y(_065_)
  );
  NOT _076_ (
    .A(validt_00),
    .Y(_066_)
  );
  NAND _077_ (
    .A(a[6]),
    .B(_064_),
    .Y(_067_)
  );
  NAND _078_ (
    .A(data_000[6]),
    .B(valid_000),
    .Y(_068_)
  );
  NAND _079_ (
    .A(_067_),
    .B(_068_),
    .Y(_000_[6])
  );
  NAND _080_ (
    .A(_064_),
    .B(a[5]),
    .Y(_069_)
  );
  NAND _081_ (
    .A(valid_000),
    .B(data_000[5]),
    .Y(_070_)
  );
  NAND _082_ (
    .A(_069_),
    .B(_070_),
    .Y(_000_[5])
  );
  NAND _083_ (
    .A(_064_),
    .B(a[4]),
    .Y(_071_)
  );
  NAND _084_ (
    .A(valid_000),
    .B(data_000[4]),
    .Y(_072_)
  );
  NAND _085_ (
    .A(_071_),
    .B(_072_),
    .Y(_000_[4])
  );
  NAND _086_ (
    .A(_064_),
    .B(a[3]),
    .Y(_014_)
  );
  NAND _087_ (
    .A(valid_000),
    .B(data_000[3]),
    .Y(_015_)
  );
  NAND _088_ (
    .A(_014_),
    .B(_015_),
    .Y(_000_[3])
  );
  NAND _089_ (
    .A(_064_),
    .B(a[2]),
    .Y(_016_)
  );
  NAND _090_ (
    .A(valid_000),
    .B(data_000[2]),
    .Y(_017_)
  );
  NAND _091_ (
    .A(_016_),
    .B(_017_),
    .Y(_000_[2])
  );
  NAND _092_ (
    .A(_064_),
    .B(a[1]),
    .Y(_018_)
  );
  NAND _093_ (
    .A(valid_000),
    .B(data_000[1]),
    .Y(_019_)
  );
  NAND _094_ (
    .A(_018_),
    .B(_019_),
    .Y(_000_[1])
  );
  NAND _095_ (
    .A(_064_),
    .B(a[0]),
    .Y(_020_)
  );
  NAND _096_ (
    .A(valid_000),
    .B(data_000[0]),
    .Y(_021_)
  );
  NAND _097_ (
    .A(_020_),
    .B(_021_),
    .Y(_000_[0])
  );
  NAND _098_ (
    .A(_064_),
    .B(b[6]),
    .Y(_022_)
  );
  NAND _099_ (
    .A(_068_),
    .B(_022_),
    .Y(_001_[6])
  );
  NAND _100_ (
    .A(_064_),
    .B(b[5]),
    .Y(_023_)
  );
  NAND _101_ (
    .A(_070_),
    .B(_023_),
    .Y(_001_[5])
  );
  NAND _102_ (
    .A(_064_),
    .B(b[4]),
    .Y(_024_)
  );
  NAND _103_ (
    .A(_072_),
    .B(_024_),
    .Y(_001_[4])
  );
  NAND _104_ (
    .A(_064_),
    .B(b[3]),
    .Y(_025_)
  );
  NAND _105_ (
    .A(_015_),
    .B(_025_),
    .Y(_001_[3])
  );
  NAND _106_ (
    .A(_064_),
    .B(b[2]),
    .Y(_026_)
  );
  NAND _107_ (
    .A(_017_),
    .B(_026_),
    .Y(_001_[2])
  );
  NAND _108_ (
    .A(_064_),
    .B(b[1]),
    .Y(_027_)
  );
  NAND _109_ (
    .A(_019_),
    .B(_027_),
    .Y(_001_[1])
  );
  NAND _110_ (
    .A(_064_),
    .B(b[0]),
    .Y(_028_)
  );
  NAND _111_ (
    .A(_021_),
    .B(_028_),
    .Y(_001_[0])
  );
  NAND _112_ (
    .A(b[6]),
    .B(validt_11),
    .Y(_029_)
  );
  NAND _113_ (
    .A(data_11[6]),
    .B(_065_),
    .Y(_030_)
  );
  NAND _114_ (
    .A(_029_),
    .B(_030_),
    .Y(_003_[6])
  );
  NAND _115_ (
    .A(b[5]),
    .B(validt_11),
    .Y(_031_)
  );
  NAND _116_ (
    .A(_065_),
    .B(data_11[5]),
    .Y(_032_)
  );
  NAND _117_ (
    .A(_031_),
    .B(_032_),
    .Y(_003_[5])
  );
  NAND _118_ (
    .A(b[4]),
    .B(validt_11),
    .Y(_033_)
  );
  NAND _119_ (
    .A(_065_),
    .B(data_11[4]),
    .Y(_034_)
  );
  NAND _120_ (
    .A(_033_),
    .B(_034_),
    .Y(_003_[4])
  );
  NAND _121_ (
    .A(b[3]),
    .B(validt_11),
    .Y(_035_)
  );
  NAND _122_ (
    .A(_065_),
    .B(data_11[3]),
    .Y(_036_)
  );
  NAND _123_ (
    .A(_035_),
    .B(_036_),
    .Y(_003_[3])
  );
  NAND _124_ (
    .A(b[2]),
    .B(validt_11),
    .Y(_037_)
  );
  NAND _125_ (
    .A(_065_),
    .B(data_11[2]),
    .Y(_038_)
  );
  NAND _126_ (
    .A(_037_),
    .B(_038_),
    .Y(_003_[2])
  );
  NAND _127_ (
    .A(b[1]),
    .B(validt_11),
    .Y(_039_)
  );
  NAND _128_ (
    .A(_065_),
    .B(data_11[1]),
    .Y(_040_)
  );
  NAND _129_ (
    .A(_039_),
    .B(_040_),
    .Y(_003_[1])
  );
  NAND _130_ (
    .A(b[0]),
    .B(validt_11),
    .Y(_041_)
  );
  NAND _131_ (
    .A(_065_),
    .B(data_11[0]),
    .Y(_042_)
  );
  NAND _132_ (
    .A(_041_),
    .B(_042_),
    .Y(_003_[0])
  );
  NAND _133_ (
    .A(a[6]),
    .B(validt_00),
    .Y(_043_)
  );
  NAND _134_ (
    .A(data_00[6]),
    .B(_066_),
    .Y(_044_)
  );
  NAND _135_ (
    .A(_043_),
    .B(_044_),
    .Y(_002_[6])
  );
  NAND _136_ (
    .A(a[5]),
    .B(validt_00),
    .Y(_045_)
  );
  NAND _137_ (
    .A(_066_),
    .B(data_00[5]),
    .Y(_046_)
  );
  NAND _138_ (
    .A(_045_),
    .B(_046_),
    .Y(_002_[5])
  );
  NAND _139_ (
    .A(a[4]),
    .B(validt_00),
    .Y(_047_)
  );
  NAND _140_ (
    .A(_066_),
    .B(data_00[4]),
    .Y(_048_)
  );
  NAND _141_ (
    .A(_047_),
    .B(_048_),
    .Y(_002_[4])
  );
  NAND _142_ (
    .A(a[3]),
    .B(validt_00),
    .Y(_049_)
  );
  NAND _143_ (
    .A(_066_),
    .B(data_00[3]),
    .Y(_050_)
  );
  NAND _144_ (
    .A(_049_),
    .B(_050_),
    .Y(_002_[3])
  );
  NAND _145_ (
    .A(a[2]),
    .B(validt_00),
    .Y(_051_)
  );
  NAND _146_ (
    .A(_066_),
    .B(data_00[2]),
    .Y(_052_)
  );
  NAND _147_ (
    .A(_051_),
    .B(_052_),
    .Y(_002_[2])
  );
  NAND _148_ (
    .A(a[1]),
    .B(validt_00),
    .Y(_053_)
  );
  NAND _149_ (
    .A(_066_),
    .B(data_00[1]),
    .Y(_054_)
  );
  NAND _150_ (
    .A(_053_),
    .B(_054_),
    .Y(_002_[1])
  );
  NAND _151_ (
    .A(a[0]),
    .B(validt_00),
    .Y(_055_)
  );
  NAND _152_ (
    .A(_066_),
    .B(data_00[0]),
    .Y(_056_)
  );
  NAND _153_ (
    .A(_055_),
    .B(_056_),
    .Y(_002_[0])
  );
  NAND _154_ (
    .A(validt_11),
    .B(b[7]),
    .Y(_057_)
  );
  NAND _155_ (
    .A(_065_),
    .B(data_11[7]),
    .Y(_058_)
  );
  NAND _156_ (
    .A(_057_),
    .B(_058_),
    .Y(_003_[7])
  );
  NAND _157_ (
    .A(validt_00),
    .B(a[7]),
    .Y(_059_)
  );
  NAND _158_ (
    .A(_066_),
    .B(data_00[7]),
    .Y(_060_)
  );
  NAND _159_ (
    .A(_059_),
    .B(_060_),
    .Y(_002_[7])
  );
  NAND _160_ (
    .A(_064_),
    .B(b[7]),
    .Y(_061_)
  );
  NAND _161_ (
    .A(valid_000),
    .B(data_000[7]),
    .Y(_062_)
  );
  NAND _162_ (
    .A(_061_),
    .B(_062_),
    .Y(_001_[7])
  );
  NAND _163_ (
    .A(_064_),
    .B(a[7]),
    .Y(_063_)
  );
  NAND _164_ (
    .A(_062_),
    .B(_063_),
    .Y(_000_[7])
  );
  NOT _165_ (
    .A(clk_4f),
    .Y(_006_)
  );
  NOT _166_ (
    .A(clk_4f),
    .Y(_007_)
  );
  NOT _167_ (
    .A(clk_4f),
    .Y(_008_)
  );
  NOT _168_ (
    .A(clk_4f),
    .Y(_009_)
  );
  NOT _169_ (
    .A(clk_4f),
    .Y(_010_)
  );
  NOT _170_ (
    .A(clk_4f),
    .Y(_011_)
  );
  NOT _171_ (
    .A(clk_4f),
    .Y(_012_)
  );
  NOT _172_ (
    .A(clk_4f),
    .Y(_013_)
  );
  BUF _173_ (
    .A(valid_000),
    .Y(_004_)
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _174_ (
    .C(clk_2f),
    .D(_003_[0]),
    .Q(data_11[0])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _175_ (
    .C(clk_2f),
    .D(_003_[1]),
    .Q(data_11[1])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _176_ (
    .C(clk_2f),
    .D(_003_[2]),
    .Q(data_11[2])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _177_ (
    .C(clk_2f),
    .D(_003_[3]),
    .Q(data_11[3])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _178_ (
    .C(clk_2f),
    .D(_003_[4]),
    .Q(data_11[4])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _179_ (
    .C(clk_2f),
    .D(_003_[5]),
    .Q(data_11[5])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _180_ (
    .C(clk_2f),
    .D(_003_[6]),
    .Q(data_11[6])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _181_ (
    .C(clk_2f),
    .D(_003_[7]),
    .Q(data_11[7])
  );
  (* src = "DEMUX_L2.v:59" *)
  DFF _182_ (
    .C(clk_2f),
    .D(validt_11),
    .Q(valid_11)
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _183_ (
    .C(clk_2f),
    .D(validt_00),
    .Q(valid_00)
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _184_ (
    .C(clk_2f),
    .D(_002_[0]),
    .Q(data_00[0])
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _185_ (
    .C(clk_2f),
    .D(_002_[1]),
    .Q(data_00[1])
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _186_ (
    .C(clk_2f),
    .D(_002_[2]),
    .Q(data_00[2])
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _187_ (
    .C(clk_2f),
    .D(_002_[3]),
    .Q(data_00[3])
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _188_ (
    .C(clk_2f),
    .D(_002_[4]),
    .Q(data_00[4])
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _189_ (
    .C(clk_2f),
    .D(_002_[5]),
    .Q(data_00[5])
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _190_ (
    .C(clk_2f),
    .D(_002_[6]),
    .Q(data_00[6])
  );
  (* src = "DEMUX_L2.v:45" *)
  DFF _191_ (
    .C(clk_2f),
    .D(_002_[7]),
    .Q(data_00[7])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _192_ (
    .C(_012_),
    .D(_004_),
    .Q(validt_11)
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _193_ (
    .C(_011_),
    .D(_001_[0]),
    .Q(b[0])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _194_ (
    .C(_010_),
    .D(_001_[1]),
    .Q(b[1])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _195_ (
    .C(_009_),
    .D(_001_[2]),
    .Q(b[2])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _196_ (
    .C(_008_),
    .D(_001_[3]),
    .Q(b[3])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _197_ (
    .C(_007_),
    .D(_001_[4]),
    .Q(b[4])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _198_ (
    .C(_006_),
    .D(_001_[5]),
    .Q(b[5])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _199_ (
    .C(_005_),
    .D(_001_[6]),
    .Q(b[6])
  );
  (* src = "DEMUX_L2.v:33" *)
  DFF _200_ (
    .C(_013_),
    .D(_001_[7]),
    .Q(b[7])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _201_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(a[0])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _202_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(a[1])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _203_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(a[2])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _204_ (
    .C(clk_4f),
    .D(_000_[3]),
    .Q(a[3])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _205_ (
    .C(clk_4f),
    .D(_000_[4]),
    .Q(a[4])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _206_ (
    .C(clk_4f),
    .D(_000_[5]),
    .Q(a[5])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _207_ (
    .C(clk_4f),
    .D(_000_[6]),
    .Q(a[6])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _208_ (
    .C(clk_4f),
    .D(_000_[7]),
    .Q(a[7])
  );
  (* src = "DEMUX_L2.v:20" *)
  DFF _209_ (
    .C(clk_4f),
    .D(_004_),
    .Q(validt_00)
  );
endmodule

(* src = "paralelo_serial_rx.v:1" *)
module paralelo_serial_rx_synth(active, clk_4f, clk_32f, rst_L, idle_out);
  (* src = "paralelo_serial_rx.v:31" *)
  wire [7:0] _00_;
  (* src = "paralelo_serial_rx.v:12" *)
  wire [2:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  (* src = "paralelo_serial_rx.v:2" *)
  input active;
  (* src = "paralelo_serial_rx.v:4" *)
  input clk_32f;
  (* src = "paralelo_serial_rx.v:3" *)
  input clk_4f;
  (* init = 8'h00 *)
  (* src = "paralelo_serial_rx.v:9" *)
  wire [7:0] data2send;
  (* src = "paralelo_serial_rx.v:6" *)
  output idle_out;
  (* init = 3'h0 *)
  (* src = "paralelo_serial_rx.v:8" *)
  wire [2:0] index;
  (* src = "paralelo_serial_rx.v:5" *)
  input rst_L;
  NOT _34_ (
    .A(index[2]),
    .Y(_02_)
  );
  NOT _35_ (
    .A(index[1]),
    .Y(_03_)
  );
  NOT _36_ (
    .A(index[0]),
    .Y(_04_)
  );
  NOT _37_ (
    .A(rst_L),
    .Y(_05_)
  );
  NOT _38_ (
    .A(active),
    .Y(_00_[7])
  );
  NOR _39_ (
    .A(_02_),
    .B(data2send[0]),
    .Y(_06_)
  );
  NOR _40_ (
    .A(index[2]),
    .B(data2send[4]),
    .Y(_07_)
  );
  NOR _41_ (
    .A(_06_),
    .B(_07_),
    .Y(_08_)
  );
  NOR _42_ (
    .A(_04_),
    .B(_08_),
    .Y(_09_)
  );
  NOR _43_ (
    .A(_02_),
    .B(data2send[1]),
    .Y(_10_)
  );
  NOR _44_ (
    .A(index[2]),
    .B(data2send[5]),
    .Y(_11_)
  );
  NOR _45_ (
    .A(_10_),
    .B(_11_),
    .Y(_12_)
  );
  NOR _46_ (
    .A(index[0]),
    .B(_12_),
    .Y(_13_)
  );
  NOR _47_ (
    .A(_09_),
    .B(_13_),
    .Y(_14_)
  );
  NOR _48_ (
    .A(_03_),
    .B(_14_),
    .Y(_15_)
  );
  NOR _49_ (
    .A(index[2]),
    .B(data2send[6]),
    .Y(_16_)
  );
  NOR _50_ (
    .A(_02_),
    .B(data2send[2]),
    .Y(_17_)
  );
  NOR _51_ (
    .A(_16_),
    .B(_17_),
    .Y(_18_)
  );
  NOR _52_ (
    .A(_04_),
    .B(_18_),
    .Y(_19_)
  );
  NOR _53_ (
    .A(index[2]),
    .B(data2send[7]),
    .Y(_20_)
  );
  NOR _54_ (
    .A(_02_),
    .B(data2send[3]),
    .Y(_21_)
  );
  NOR _55_ (
    .A(_20_),
    .B(_21_),
    .Y(_22_)
  );
  NOR _56_ (
    .A(index[0]),
    .B(_22_),
    .Y(_23_)
  );
  NOR _57_ (
    .A(_19_),
    .B(_23_),
    .Y(_24_)
  );
  NOR _58_ (
    .A(index[1]),
    .B(_24_),
    .Y(_25_)
  );
  NOR _59_ (
    .A(_03_),
    .B(_04_),
    .Y(_26_)
  );
  NAND _60_ (
    .A(index[1]),
    .B(index[0]),
    .Y(_27_)
  );
  NOR _61_ (
    .A(_15_),
    .B(_25_),
    .Y(idle_out)
  );
  NOR _62_ (
    .A(index[1]),
    .B(index[0]),
    .Y(_28_)
  );
  NOT _63_ (
    .A(_28_),
    .Y(_29_)
  );
  NAND _64_ (
    .A(rst_L),
    .B(_29_),
    .Y(_30_)
  );
  NOR _65_ (
    .A(_26_),
    .B(_30_),
    .Y(_01_[1])
  );
  NOR _66_ (
    .A(index[0]),
    .B(_05_),
    .Y(_01_[0])
  );
  NOR _67_ (
    .A(_02_),
    .B(_27_),
    .Y(_31_)
  );
  NAND _68_ (
    .A(_02_),
    .B(_27_),
    .Y(_32_)
  );
  NAND _69_ (
    .A(rst_L),
    .B(_32_),
    .Y(_33_)
  );
  NOR _70_ (
    .A(_31_),
    .B(_33_),
    .Y(_01_[2])
  );
  BUF _71_ (
    .A(active),
    .Y(_00_[6])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _72_ (
    .C(clk_4f),
    .D(1'h0),
    .Q(data2send[0])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _73_ (
    .C(clk_4f),
    .D(1'h0),
    .Q(data2send[1])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _74_ (
    .C(clk_4f),
    .D(1'h1),
    .Q(data2send[2])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _75_ (
    .C(clk_4f),
    .D(1'h1),
    .Q(data2send[3])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _76_ (
    .C(clk_4f),
    .D(1'h1),
    .Q(data2send[4])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _77_ (
    .C(clk_4f),
    .D(1'h1),
    .Q(data2send[5])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _78_ (
    .C(clk_4f),
    .D(_00_[6]),
    .Q(data2send[6])
  );
  (* src = "paralelo_serial_rx.v:31" *)
  DFF _79_ (
    .C(clk_4f),
    .D(_00_[7]),
    .Q(data2send[7])
  );
  (* src = "paralelo_serial_rx.v:12" *)
  DFF _80_ (
    .C(clk_32f),
    .D(_01_[0]),
    .Q(index[0])
  );
  (* src = "paralelo_serial_rx.v:12" *)
  DFF _81_ (
    .C(clk_32f),
    .D(_01_[1]),
    .Q(index[1])
  );
  (* src = "paralelo_serial_rx.v:12" *)
  DFF _82_ (
    .C(clk_32f),
    .D(_01_[2]),
    .Q(index[2])
  );
  assign _00_[5:0] = 6'h3c;
endmodule

(* top =  1  *)
(* src = "phy_rx.v:6" *)
module phy_rx_synth(rst_L, clk_f, clk_2f, clk_4f, clk_32f, datos_paralelo_serial, idle_out, data_out_0, data_out_1, data_out_2, data_out_3, valid_out_0, valid_out_1, valid_out_2, valid_out_3);
  (* src = "phy_rx.v:26" *)
  wire active;
  (* src = "phy_rx.v:10" *)
  input clk_2f;
  (* src = "phy_rx.v:12" *)
  input clk_32f;
  (* src = "phy_rx.v:11" *)
  input clk_4f;
  (* src = "phy_rx.v:9" *)
  input clk_f;
  (* src = "phy_rx.v:25" *)
  wire [7:0] data_00;
  (* src = "phy_rx.v:25" *)
  wire [7:0] data_11;
  (* src = "phy_rx.v:16" *)
  output [7:0] data_out_0;
  (* src = "phy_rx.v:17" *)
  output [7:0] data_out_1;
  (* src = "phy_rx.v:18" *)
  output [7:0] data_out_2;
  (* src = "phy_rx.v:19" *)
  output [7:0] data_out_3;
  (* src = "phy_rx.v:13" *)
  input datos_paralelo_serial;
  (* src = "phy_rx.v:15" *)
  output idle_out;
  (* src = "phy_rx.v:8" *)
  input rst_L;
  (* src = "phy_rx.v:25" *)
  wire [7:0] sp_out;
  (* src = "phy_rx.v:26" *)
  wire valid_00;
  (* src = "phy_rx.v:26" *)
  wire valid_11;
  (* src = "phy_rx.v:20" *)
  output valid_out_0;
  (* src = "phy_rx.v:21" *)
  output valid_out_1;
  (* src = "phy_rx.v:22" *)
  output valid_out_2;
  (* src = "phy_rx.v:23" *)
  output valid_out_3;
  (* src = "phy_rx.v:26" *)
  wire valid_out_sp;
  (* module_not_derived = 32'd1 *)
  (* src = "phy_rx.v:60" *)
  DEMUX_L1_synth demux_L1_0 (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_0(data_out_0),
    .data_00(data_00),
    .data_1(data_out_1),
    .data_11(data_11),
    .data_2(data_out_2),
    .data_3(data_out_3),
    .valid_0(valid_out_0),
    .valid_00(valid_00),
    .valid_1(valid_out_1),
    .valid_11(valid_11),
    .valid_2(valid_out_2),
    .valid_3(valid_out_3)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_rx.v:48" *)
  DEMUX_L2_synth demux_L2_0 (
    .clk_2f(clk_2f),
    .clk_4f(clk_4f),
    .data_00(data_00),
    .data_000(sp_out),
    .data_11(data_11),
    .valid_00(valid_00),
    .valid_000(valid_out_sp),
    .valid_11(valid_11)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_rx.v:39" *)
  paralelo_serial_rx_synth parelelo_serial_rx_0 (
    .active(active),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .idle_out(idle_out),
    .rst_L(rst_L)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_rx.v:28" *)
  serial_paralelo_rx_synth serial_paralelo_rx_0 (
    .active(active),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(datos_paralelo_serial),
    .rst_L(rst_L),
    .sp_out(sp_out),
    .valid_out_sp(valid_out_sp)
  );
endmodule

(* src = "serial_paralelo_rx.v:1" *)
module serial_paralelo_rx_synth(sp_out, valid_out_sp, active, data_in, rst_L, clk_4f, clk_32f);
  (* src = "serial_paralelo_rx.v:28" *)
  wire [2:0] _000_;
  (* src = "serial_paralelo_rx.v:14" *)
  wire [2:0] _001_;
  (* src = "serial_paralelo_rx.v:24" *)
  wire [7:0] _002_;
  (* src = "serial_paralelo_rx.v:28" *)
  wire [7:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  (* src = "serial_paralelo_rx.v:12" *)
  wire [2:0] BCcounter;
  (* src = "serial_paralelo_rx.v:4" *)
  output active;
  (* src = "serial_paralelo_rx.v:8" *)
  input clk_32f;
  (* src = "serial_paralelo_rx.v:7" *)
  input clk_4f;
  (* src = "serial_paralelo_rx.v:11" *)
  wire [2:0] counter;
  (* src = "serial_paralelo_rx.v:5" *)
  input data_in;
  (* src = "serial_paralelo_rx.v:6" *)
  input rst_L;
  (* src = "serial_paralelo_rx.v:10" *)
  wire [7:0] serial_in;
  (* src = "serial_paralelo_rx.v:2" *)
  output [7:0] sp_out;
  (* src = "serial_paralelo_rx.v:3" *)
  output valid_out_sp;
  NOT _101_ (
    .A(BCcounter[1]),
    .Y(_069_)
  );
  NOT _102_ (
    .A(counter[2]),
    .Y(_070_)
  );
  NOT _103_ (
    .A(counter[1]),
    .Y(_071_)
  );
  NOT _104_ (
    .A(counter[0]),
    .Y(_072_)
  );
  NOT _105_ (
    .A(clk_32f),
    .Y(_004_)
  );
  NOT _106_ (
    .A(rst_L),
    .Y(_073_)
  );
  NOT _107_ (
    .A(sp_out[6]),
    .Y(_074_)
  );
  NOR _108_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_075_)
  );
  NOT _109_ (
    .A(_075_),
    .Y(_076_)
  );
  NAND _110_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_077_)
  );
  NOT _111_ (
    .A(_077_),
    .Y(_078_)
  );
  NAND _112_ (
    .A(rst_L),
    .B(_077_),
    .Y(_079_)
  );
  NOR _113_ (
    .A(_075_),
    .B(_079_),
    .Y(_001_[1])
  );
  NOR _114_ (
    .A(counter[0]),
    .B(_073_),
    .Y(_001_[0])
  );
  NAND _115_ (
    .A(rst_L),
    .B(serial_in[6]),
    .Y(_080_)
  );
  NAND _116_ (
    .A(_073_),
    .B(sp_out[6]),
    .Y(_081_)
  );
  NAND _117_ (
    .A(_080_),
    .B(_081_),
    .Y(_003_[6])
  );
  NAND _118_ (
    .A(rst_L),
    .B(serial_in[5]),
    .Y(_082_)
  );
  NAND _119_ (
    .A(_073_),
    .B(sp_out[5]),
    .Y(_083_)
  );
  NAND _120_ (
    .A(_082_),
    .B(_083_),
    .Y(_003_[5])
  );
  NAND _121_ (
    .A(rst_L),
    .B(serial_in[4]),
    .Y(_084_)
  );
  NAND _122_ (
    .A(_073_),
    .B(sp_out[4]),
    .Y(_085_)
  );
  NAND _123_ (
    .A(_084_),
    .B(_085_),
    .Y(_003_[4])
  );
  NAND _124_ (
    .A(rst_L),
    .B(serial_in[3]),
    .Y(_086_)
  );
  NAND _125_ (
    .A(_073_),
    .B(sp_out[3]),
    .Y(_087_)
  );
  NAND _126_ (
    .A(_086_),
    .B(_087_),
    .Y(_003_[3])
  );
  NAND _127_ (
    .A(rst_L),
    .B(serial_in[2]),
    .Y(_088_)
  );
  NAND _128_ (
    .A(_073_),
    .B(sp_out[2]),
    .Y(_089_)
  );
  NAND _129_ (
    .A(_088_),
    .B(_089_),
    .Y(_003_[2])
  );
  NAND _130_ (
    .A(rst_L),
    .B(serial_in[1]),
    .Y(_090_)
  );
  NAND _131_ (
    .A(_073_),
    .B(sp_out[1]),
    .Y(_091_)
  );
  NAND _132_ (
    .A(_090_),
    .B(_091_),
    .Y(_003_[1])
  );
  NAND _133_ (
    .A(rst_L),
    .B(serial_in[0]),
    .Y(_092_)
  );
  NAND _134_ (
    .A(_073_),
    .B(sp_out[0]),
    .Y(_093_)
  );
  NAND _135_ (
    .A(_092_),
    .B(_093_),
    .Y(_003_[0])
  );
  NOR _136_ (
    .A(serial_in[1]),
    .B(serial_in[0]),
    .Y(_094_)
  );
  NAND _137_ (
    .A(serial_in[7]),
    .B(_094_),
    .Y(_095_)
  );
  NOR _138_ (
    .A(BCcounter[2]),
    .B(serial_in[6]),
    .Y(_096_)
  );
  NAND _139_ (
    .A(serial_in[5]),
    .B(serial_in[4]),
    .Y(_097_)
  );
  NAND _140_ (
    .A(serial_in[3]),
    .B(serial_in[2]),
    .Y(_098_)
  );
  NOR _141_ (
    .A(_097_),
    .B(_098_),
    .Y(_099_)
  );
  NAND _142_ (
    .A(_096_),
    .B(_099_),
    .Y(_100_)
  );
  NOR _143_ (
    .A(_095_),
    .B(_100_),
    .Y(_012_)
  );
  NAND _144_ (
    .A(BCcounter[0]),
    .B(_012_),
    .Y(_013_)
  );
  NAND _145_ (
    .A(_069_),
    .B(_013_),
    .Y(_014_)
  );
  NAND _146_ (
    .A(rst_L),
    .B(_014_),
    .Y(_015_)
  );
  NOR _147_ (
    .A(_069_),
    .B(_013_),
    .Y(_016_)
  );
  NOR _148_ (
    .A(_015_),
    .B(_016_),
    .Y(_000_[1])
  );
  NOR _149_ (
    .A(BCcounter[0]),
    .B(_012_),
    .Y(_017_)
  );
  NAND _150_ (
    .A(rst_L),
    .B(_013_),
    .Y(_018_)
  );
  NOR _151_ (
    .A(_017_),
    .B(_018_),
    .Y(_000_[0])
  );
  NOR _152_ (
    .A(sp_out[1]),
    .B(sp_out[0]),
    .Y(_019_)
  );
  NOT _153_ (
    .A(_019_),
    .Y(_020_)
  );
  NAND _154_ (
    .A(sp_out[2]),
    .B(sp_out[7]),
    .Y(_021_)
  );
  NOR _155_ (
    .A(_020_),
    .B(_021_),
    .Y(_022_)
  );
  NAND _156_ (
    .A(_074_),
    .B(sp_out[5]),
    .Y(_023_)
  );
  NAND _157_ (
    .A(sp_out[4]),
    .B(sp_out[3]),
    .Y(_024_)
  );
  NOR _158_ (
    .A(_023_),
    .B(_024_),
    .Y(_025_)
  );
  NAND _159_ (
    .A(_022_),
    .B(_025_),
    .Y(_026_)
  );
  NAND _160_ (
    .A(BCcounter[2]),
    .B(_026_),
    .Y(_027_)
  );
  NOT _161_ (
    .A(_027_),
    .Y(valid_out_sp)
  );
  NAND _162_ (
    .A(rst_L),
    .B(serial_in[7]),
    .Y(_028_)
  );
  NAND _163_ (
    .A(_073_),
    .B(sp_out[7]),
    .Y(_029_)
  );
  NAND _164_ (
    .A(_028_),
    .B(_029_),
    .Y(_003_[7])
  );
  NOR _165_ (
    .A(BCcounter[2]),
    .B(_016_),
    .Y(_030_)
  );
  NOR _166_ (
    .A(_073_),
    .B(_030_),
    .Y(_000_[2])
  );
  NOR _167_ (
    .A(counter[2]),
    .B(_076_),
    .Y(_031_)
  );
  NAND _168_ (
    .A(_070_),
    .B(_075_),
    .Y(_032_)
  );
  NAND _169_ (
    .A(data_in),
    .B(_031_),
    .Y(_033_)
  );
  NAND _170_ (
    .A(serial_in[7]),
    .B(_032_),
    .Y(_034_)
  );
  NAND _171_ (
    .A(_033_),
    .B(_034_),
    .Y(_002_[7])
  );
  NOR _172_ (
    .A(counter[2]),
    .B(_077_),
    .Y(_035_)
  );
  NOT _173_ (
    .A(_035_),
    .Y(_036_)
  );
  NAND _174_ (
    .A(data_in),
    .B(_035_),
    .Y(_037_)
  );
  NAND _175_ (
    .A(serial_in[4]),
    .B(_036_),
    .Y(_038_)
  );
  NAND _176_ (
    .A(_037_),
    .B(_038_),
    .Y(_002_[4])
  );
  NOR _177_ (
    .A(counter[1]),
    .B(_072_),
    .Y(_039_)
  );
  NAND _178_ (
    .A(_071_),
    .B(counter[0]),
    .Y(_040_)
  );
  NOR _179_ (
    .A(_070_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _180_ (
    .A(counter[2]),
    .B(_039_),
    .Y(_042_)
  );
  NAND _181_ (
    .A(data_in),
    .B(_041_),
    .Y(_043_)
  );
  NAND _182_ (
    .A(serial_in[2]),
    .B(_042_),
    .Y(_044_)
  );
  NAND _183_ (
    .A(_043_),
    .B(_044_),
    .Y(_002_[2])
  );
  NAND _184_ (
    .A(counter[2]),
    .B(_078_),
    .Y(_045_)
  );
  NOT _185_ (
    .A(_045_),
    .Y(_046_)
  );
  NAND _186_ (
    .A(data_in),
    .B(_046_),
    .Y(_047_)
  );
  NAND _187_ (
    .A(serial_in[0]),
    .B(_045_),
    .Y(_048_)
  );
  NAND _188_ (
    .A(_047_),
    .B(_048_),
    .Y(_002_[0])
  );
  NOR _189_ (
    .A(counter[2]),
    .B(_040_),
    .Y(_049_)
  );
  NAND _190_ (
    .A(_070_),
    .B(_039_),
    .Y(_050_)
  );
  NAND _191_ (
    .A(data_in),
    .B(_049_),
    .Y(_051_)
  );
  NAND _192_ (
    .A(serial_in[6]),
    .B(_050_),
    .Y(_052_)
  );
  NAND _193_ (
    .A(_051_),
    .B(_052_),
    .Y(_002_[6])
  );
  NOR _194_ (
    .A(_071_),
    .B(counter[0]),
    .Y(_053_)
  );
  NAND _195_ (
    .A(counter[1]),
    .B(_072_),
    .Y(_054_)
  );
  NOR _196_ (
    .A(_070_),
    .B(_054_),
    .Y(_055_)
  );
  NAND _197_ (
    .A(counter[2]),
    .B(_053_),
    .Y(_056_)
  );
  NAND _198_ (
    .A(data_in),
    .B(_055_),
    .Y(_057_)
  );
  NAND _199_ (
    .A(serial_in[1]),
    .B(_056_),
    .Y(_058_)
  );
  NAND _200_ (
    .A(_057_),
    .B(_058_),
    .Y(_002_[1])
  );
  NAND _201_ (
    .A(counter[2]),
    .B(_075_),
    .Y(_059_)
  );
  NOT _202_ (
    .A(_059_),
    .Y(_060_)
  );
  NAND _203_ (
    .A(data_in),
    .B(_060_),
    .Y(_061_)
  );
  NAND _204_ (
    .A(serial_in[3]),
    .B(_059_),
    .Y(_062_)
  );
  NAND _205_ (
    .A(_061_),
    .B(_062_),
    .Y(_002_[3])
  );
  NOR _206_ (
    .A(counter[2]),
    .B(_054_),
    .Y(_063_)
  );
  NAND _207_ (
    .A(_070_),
    .B(_053_),
    .Y(_064_)
  );
  NAND _208_ (
    .A(data_in),
    .B(_063_),
    .Y(_065_)
  );
  NAND _209_ (
    .A(serial_in[5]),
    .B(_064_),
    .Y(_066_)
  );
  NAND _210_ (
    .A(_065_),
    .B(_066_),
    .Y(_002_[5])
  );
  NAND _211_ (
    .A(_070_),
    .B(_077_),
    .Y(_067_)
  );
  NAND _212_ (
    .A(rst_L),
    .B(_067_),
    .Y(_068_)
  );
  NOR _213_ (
    .A(_046_),
    .B(_068_),
    .Y(_001_[2])
  );
  NOT _214_ (
    .A(clk_32f),
    .Y(_005_)
  );
  NOT _215_ (
    .A(clk_32f),
    .Y(_006_)
  );
  NOT _216_ (
    .A(clk_32f),
    .Y(_007_)
  );
  NOT _217_ (
    .A(clk_32f),
    .Y(_008_)
  );
  NOT _218_ (
    .A(clk_32f),
    .Y(_009_)
  );
  NOT _219_ (
    .A(clk_32f),
    .Y(_010_)
  );
  BUF _220_ (
    .A(BCcounter[2]),
    .Y(active)
  );
  NOT _221_ (
    .A(clk_32f),
    .Y(_011_)
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _222_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(BCcounter[0])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _223_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(BCcounter[1])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _224_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(BCcounter[2])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _225_ (
    .C(clk_4f),
    .D(_003_[0]),
    .Q(sp_out[0])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _226_ (
    .C(clk_4f),
    .D(_003_[1]),
    .Q(sp_out[1])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _227_ (
    .C(clk_4f),
    .D(_003_[2]),
    .Q(sp_out[2])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _228_ (
    .C(clk_4f),
    .D(_003_[3]),
    .Q(sp_out[3])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _229_ (
    .C(clk_4f),
    .D(_003_[4]),
    .Q(sp_out[4])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _230_ (
    .C(clk_4f),
    .D(_003_[5]),
    .Q(sp_out[5])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _231_ (
    .C(clk_4f),
    .D(_003_[6]),
    .Q(sp_out[6])
  );
  (* src = "serial_paralelo_rx.v:28" *)
  DFF _232_ (
    .C(clk_4f),
    .D(_003_[7]),
    .Q(sp_out[7])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _233_ (
    .C(_010_),
    .D(_002_[0]),
    .Q(serial_in[0])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _234_ (
    .C(_009_),
    .D(_002_[1]),
    .Q(serial_in[1])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _235_ (
    .C(_008_),
    .D(_002_[2]),
    .Q(serial_in[2])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _236_ (
    .C(_007_),
    .D(_002_[3]),
    .Q(serial_in[3])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _237_ (
    .C(_006_),
    .D(_002_[4]),
    .Q(serial_in[4])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _238_ (
    .C(_005_),
    .D(_002_[5]),
    .Q(serial_in[5])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _239_ (
    .C(_004_),
    .D(_002_[6]),
    .Q(serial_in[6])
  );
  (* src = "serial_paralelo_rx.v:24" *)
  DFF _240_ (
    .C(_011_),
    .D(_002_[7]),
    .Q(serial_in[7])
  );
  (* src = "serial_paralelo_rx.v:14" *)
  DFF _241_ (
    .C(clk_32f),
    .D(_001_[0]),
    .Q(counter[0])
  );
  (* src = "serial_paralelo_rx.v:14" *)
  DFF _242_ (
    .C(clk_32f),
    .D(_001_[1]),
    .Q(counter[1])
  );
  (* src = "serial_paralelo_rx.v:14" *)
  DFF _243_ (
    .C(clk_32f),
    .D(_001_[2]),
    .Q(counter[2])
  );
endmodule
